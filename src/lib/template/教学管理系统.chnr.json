{
  "name": "教学管理系统-标准模板",
  "describe": "教学管理系统参考案例",
  "avatar": "",
  "version": "4.1.1",
  "createdTime": "2022-5-9 06:43:39",
  "updatedTime": "2022-5-15 21:10:11",
  "dbConns": [],
  "profile": {
    "default": {
      "db": "29D1CE08-4C35-4D2D-AAA9-23D93305B52E",
      "dbConn": "",
      "entityInitFields": [
        {
          "defKey": "TENANT_ID",
          "defName": "租户号",
          "comment": "",
          "type": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "refDict": "",
          "uiHint": "",
          "id": "ADB3AD14-6603-43E2-8261-114E32442B5B"
        },
        {
          "defKey": "REVISION",
          "defName": "乐观锁",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "uiHint": "",
          "id": "92BF430E-01FA-4AEF-944F-25A142632654"
        },
        {
          "defKey": "CREATED_BY",
          "defName": "创建人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "uiHint": "",
          "id": "C8BE2C7A-8251-4ADD-BB4F-411C5754DA62"
        },
        {
          "defKey": "CREATED_TIME",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "uiHint": "",
          "id": "4E471FD6-3E73-4A90-B660-51598A482409"
        },
        {
          "defKey": "UPDATED_BY",
          "defName": "更新人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "uiHint": "",
          "id": "0DC24AA9-4CD0-45D8-95CF-FA546BE343AB"
        },
        {
          "defKey": "UPDATED_TIME",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "uiHint": "",
          "id": "09F64AC4-4DEE-428F-AF64-4C103884E1AC"
        }
      ],
      "entityInitProperties": {
        "partitioned by": "(date string)",
        "row format delimited": "",
        "fields terminated by ','": "",
        "collection items terminated by '-'": "",
        "map keys terminated by ':'": "",
        "store as textfile;": ""
      }
    },
    "javaHome": "",
    "sql": {
      "delimiter": ""
    },
    "dataTypeSupports": [
      {
        "defKey": "MYSQL",
        "id": "29D1CE08-4C35-4D2D-AAA9-23D93305B52E"
      },
      {
        "defKey": "ORACLE",
        "id": "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542"
      },
      {
        "defKey": "SQLServer",
        "id": "BFC87171-C74F-494A-B7C2-76B9C55FACC9"
      },
      {
        "defKey": "PostgreSQL",
        "id": "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022"
      },
      {
        "defKey": "DB2",
        "id": "89504F5D-94BF-4C9E-8B2E-44F37305FED5"
      },
      {
        "defKey": "DM",
        "id": "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307"
      },
      {
        "defKey": "GaussDB",
        "id": "592C7013-143D-4E7B-AF64-0D7BF1E28230"
      },
      {
        "defKey": "Kingbase",
        "id": "77BD85E5-9D0D-4096-8427-CBA306FC9C6A"
      },
      {
        "defKey": "MaxCompute",
        "id": "11D1FB71-A587-4217-89BA-611B8A1F83E0"
      },
      {
        "defKey": "SQLite",
        "id": "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1"
      },
      {
        "defKey": "JAVA",
        "id": "797A1496-D649-4261-89B4-544132EC3F36"
      },
      {
        "defKey": "JavaMybatis",
        "id": "895CFD1D-4273-4D32-A2C4-CAC70200AB5B"
      },
      {
        "defKey": "JavaMybatisPlus",
        "id": "A2EE7B4A-CE62-4290-B00C-B26C1BF18073"
      },
      {
        "defKey": "C#",
        "id": "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30"
      },
      {
        "defKey": "Hive",
        "id": "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2"
      },
      {
        "defKey": "Golang",
        "id": "B91D99E0-9B7C-416C-8737-B760957DAF09"
      }
    ],
    "codeTemplates": [
      {
        "type": "appCode",
        "applyFor": "797A1496-D649-4261-89B4-544132EC3F36",
        " JpaBean": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.entity;\n$blankline\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport javax.persistence.*;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n\n /**\n * {{=it.entity.defName}};{{=it.entity.comment}}\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@ApiModel(value = \"{{=it.entity.defName}}\",description = \"{{=it.entity.comment}}\")\n@Table(name=\"{{=it.entity.defKey}}\")\npublic class {{=beanClass}} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    {{? field.primaryKey }}\n    @Id\n    @GeneratedValue\n    {{?}}\n    @ApiModelProperty(name = \"{{=field.defName}}\",notes = \"{{=field.comment}}\")\n    private {{=field.type}} {{=it.func.camel(field.defKey,false)}} ;\n{{~}}\n$blankline\n\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.defKey,true)}}(){\n        return this.{{=it.func.camel(field.defKey,false)}};\n    }\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public void set{{=it.func.camel(field.defKey,true)}}({{=field.type}} {{= it.func.camel(field.defKey,false) }}){\n        this.{{=it.func.camel(field.defKey,false)}}={{=it.func.camel(field.defKey,false)}};\n    }\n{{~}}\n}"
      },
      {
        "type": "appCode",
        "applyFor": "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30",
        "Default": "using System;\nusing System.Collections.Generic;\n\n$blankline\n{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n}}\n/*\n * @author : http://www.chiner.com.cn\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n * @desc : {{=it.func.join(it.entity.defName,it.entity.comment,'-')}}\n */\nnamespace PDManer.Application\n{\n    public partial class {{=it.func.camel(it.entity.defKey,true) }}\n    {\n    \n        {{~it.entity.fields:field:index}}\n        /// <summary>\n        /// {{=it.func.join(field.defName,field.comment,';')}}\n        /// </summary>\n        public {{=field.type}} {{=it.func.camel(field.defKey,true)}} { get; set; }\n        $blankline\n        {{~}}\n        \n    }\n}",
        "SqlSugar": "using System;\nusing System.Collections.Generic;\nusing SqlSugar;\n\n$blankline\n{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    var sqlSugartable='[SugarTable(\"{{=it.entity.defKey}}\", TableDescription = \"{{=it.func.join(it.entity.defName,it.entity.comment,';')}}\")]';\n}}\n/*\n * @author : xkdong@163.com\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n * @desc : {{=it.func.join(it.entity.defName,it.entity.comment,'-')}}\n */\nnamespace Model.DBModel\n{\n    /// <summary>\n    /// {{=it.func.join(it.entity.defName,it.entity.comment,';')}}\n    /// </summary>\n    {{=sqlSugartable}}\n    public class {{=it.entity.defKey}}\n    {\n        {{~it.entity.fields:field:index}}\n        /// <summary>\n        /// {{=it.func.join(field.defName,field.comment,';')}}\n        /// </summary>\n        {{? field.primaryKey }}\n        [SugarColumn(IsIdentity = true, IsPrimaryKey = true)]\n        {{?}}\n        public {{=field.type}} {{=it.func.camel(field.defKey,true)}}{ get; set; }\n        $blankline\n        {{~}}\n    }\n}"
      },
      {
        "applyFor": "895CFD1D-4273-4D32-A2C4-CAC70200AB5B",
        "type": "appCode",
        "Controller": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.controller;\n$blankline\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageRequest;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.service.{{=serviceClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表控制层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Api(tags = \"{{=it.entity.defName}}对象功能接口\")\n@RestController\n@RequestMapping(\"/{{=it.func.camel(it.entity.defKey,false)}}\")\npublic class {{=beanClass}}Controller{\n    @Autowired\n    private {{=serviceClass}} {{=serviceVarName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    @ApiOperation(\"通过ID查询单条数据\")\n    @GetMapping(\"{{{=it.func.camel(pkVarName,false)}}}\")\n    public ResponseEntity<{{=beanClass}}> queryById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.queryById({{=pkVarName}}));\n    }\n    $blankline\n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    @ApiOperation(\"分页查询\")\n    @GetMapping\n    public ResponseEntity<Page<{{=beanClass}}>> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest){\n        return ResponseEntity.ok({{=serviceVarName}}.paginQuery({{=beanVarName}}, pageRequest));\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"新增数据\")\n    @PostMapping\n    public ResponseEntity<{{=beanClass}}> add({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.insert({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"更新数据\")\n    @PutMapping\n    public ResponseEntity<{{=beanClass}}> edit({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.update({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    @ApiOperation(\"通过主键删除数据\")\n    @DeleteMapping\n    public ResponseEntity<Boolean> deleteById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.deleteById({{=pkVarName}}));\n    }\n}",
        "Service": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.service;\n$blankline\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageRequest;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务接口\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\npublic interface {{=serviceClass}}{\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}});\n    \n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest);\n\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} insert({{=beanClass}} {{=beanVarName}});\n\n    \n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} update({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    boolean deleteById({{=pkDataType}} {{=pkVarName}});\n}",
        "ServiceImpl": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkVarNameU = \"UndefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkVarNameU = it.func.camel(field.defKey,true);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    var mapperName = beanVarName+'Mapper';\n    \n}}package {{=pkgName}}.service.impl;\n$blankline\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageImpl;\nimport org.springframework.data.domain.PageRequest;\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.mapper.{{=beanClass}}Mapper;\nimport {{=pkgName}}.service.{{=serviceClass}};\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务实现类\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Service\npublic class {{=serviceClass}}Impl implements {{=serviceClass}}{\n    @Autowired\n    private {{=beanClass}}Mapper {{=mapperName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    public {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}}){\n        return {{=mapperName}}.queryById({{=pkVarName}});\n    }\n    $blankline\n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    public Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest){\n        long total = {{=mapperName}}.count({{=beanVarName}});\n        return new PageImpl<>({{=mapperName}}.queryAllByLimit({{=beanVarName}}, pageRequest), pageRequest, total);\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} insert({{=beanClass}} {{=beanVarName}}){\n        {{=mapperName}}.insert({{=beanVarName}});\n        return {{=beanVarName}};\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} update({{=beanClass}} {{=beanVarName}}){\n        {{=mapperName}}.update({{=beanVarName}});\n        return queryById({{=beanVarName}}.get{{=pkVarNameU}}());\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    public boolean deleteById({{=pkDataType}} {{=pkVarName}}){\n        int total = {{=mapperName}}.deleteById({{=pkVarName}});\n        return total > 0;\n    }\n}",
        "Mapper": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.mapper;\n$blankline\nimport java.util.List;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Param;\nimport org.springframework.data.domain.Pageable;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表数据库访问层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Mapper\npublic interface {{=beanClass}}Mapper{\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}});\n    \n    /** \n     * 分页查询指定行数据\n     *\n     * @param {{=beanVarName}} 查询条件\n     * @param pageable 分页对象\n     * @return 对象列表\n     */\n    List<{{=beanClass}}> queryAllByLimit({{=beanClass}} {{=beanVarName}}, @Param(\"pageable\") Pageable pageable);\n\n    /** \n     * 统计总行数\n     *\n     * @param {{=beanVarName}} 查询条件\n     * @return 总行数\n     */\n    long count({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 影响行数\n     */\n    int insert({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 批量新增数据\n     *\n     * @param entities List<{{=beanClass}}> 实例对象列表\n     * @return 影响行数\n     */\n    int insertBatch(@Param(\"entities\") List<{{=beanClass}}> entities);\n    \n    /** \n     * 批量新增或按主键更新数据\n     *\n     * @param entities List<{{=beanClass}}> 实例对象列表\n     * @return 影响行数\n     */\n    int insertOrUpdateBatch(@Param(\"entities\") List<{{=beanClass}}> entities);\n    \n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 影响行数\n     */\n    int update({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 影响行数\n     */\n    int deleteById({{=pkDataType}} {{=pkVarName}});\n}",
        "Mapper.xml": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    var pkField = \"UNDEFINED_ID\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkField = field.defKey;\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"{{=pkgName}}.mapper.{{=beanClass}}Mapper\">\n    <resultMap type=\"{{=pkgName}}.entity.{{=beanClass}}\" id=\"{{=beanClass}}Map\">\n    {{~it.entity.fields:field:index}}\n        <result property=\"{{=it.func.camel(field.defKey,false)}}\" column=\"{{=field.defKey}}\" jdbcType=\"{{=field.dbType}}\"/>\n    {{~}}\n    </resultMap>\n    $blankline\n    <!-- 通过ID查询单条数据 -->\n    <select id=\"queryById\" resultMap=\"{{=beanClass}}Map\">\n        select\n            {{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}}\n        from {{=it.entity.defKey}}\n        where {{=pkField}} = #{{{=pkVarName}}}\n    </select>\n    $blankline\n    <!--分页查询指定行数据-->\n    <select id=\"queryAllByLimit\" resultMap=\"{{=beanClass}}Map\">\n        select\n            {{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}}\n        from {{=it.entity.defKey}}\n        <where>\n        {{~it.entity.fields:field:index}}\n            <if test=\"{{=it.func.camel(field.defKey,false)}} != null and {{=it.func.camel(field.defKey,false)}} != ''\">\n                and {{=field.defKey}} = #{{{=it.func.camel(field.defKey,false)}}}\n            </if>\n        {{~}}\n        </where>\n        limit #{pageable.offset}, #{pageable.pageSize}\n    </select>\n    $blankline\n    <!--统计总行数-->\n    <select id=\"count\" resultType=\"java.lang.Long\">\n        select count(1)\n        from {{=it.entity.defKey}}\n        <where>\n        {{~it.entity.fields:field:index}}\n            <if test=\"{{=it.func.camel(field.defKey,false)}} != null and {{=it.func.camel(field.defKey,false)}} != ''\">\n                and {{=field.defKey}} = #{{{=it.func.camel(field.defKey,false)}}}\n            </if>\n        {{~}}\n        </where>\n    </select>\n    $blankline\n    <!--新增数据-->\n    <insert id=\"insert\" keyProperty=\"{{=pkField}}\" useGeneratedKeys=\"true\">\n        insert into {{=it.entity.defKey}}({{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}})\n        values ({{=it.entity.fields.map(function(e,i){return '#{'+it.func.camel(e.defKey,false)+'}'}).join(',')}})\n    </insert>\n    $blankline\n    <!-- 批量新增数据 -->\n    <insert id=\"insertBatch\" keyProperty=\"{{=pkField}}\" useGeneratedKeys=\"true\">\n        insert into {{=it.entity.defKey}}({{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}})\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n            ({{=it.entity.fields.map(function(e,i){return '#{entity.'+it.func.camel(e.defKey,false)+'}'}).join(',')}})\n        </foreach>\n    </insert>\n    $blankline\n    <!-- 批量新增或按主键更新数据 -->\n    <insert id=\"insertOrUpdateBatch\" keyProperty=\"{{=pkField}}\" useGeneratedKeys=\"true\">\n        insert into {{=it.entity.defKey}}({{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}})\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n            ({{=it.entity.fields.map(function(e,i){return '#{entity.'+it.func.camel(e.defKey,false)+'}'}).join(',')}})\n        </foreach>\n        on duplicate key update\n        {{=it.entity.fields.map(function(e,i){return e.defKey + '=values('+e.defKey+')'}).join(',\\n\\t\\t')}}\n    </insert>\n    $blankline\n    <!-- 更新数据 -->\n    <update id=\"update\">\n        update {{=it.entity.defKey}}\n        <set>\n        {{~it.entity.fields:field:index}}\n            <if test=\"{{=it.func.camel(field.defKey,false)}} != null and {{=it.func.camel(field.defKey,false)}} != ''\">\n                {{=field.defKey}} = #{{{=it.func.camel(field.defKey,false)}}},\n            </if>\n        {{~}}\n        </set>\n        where {{=pkField}} = #{{{=pkVarName}}}\n    </update>\n    $blankline\n    <!--通过主键删除-->\n    <delete id=\"deleteById\">\n        delete from {{=it.entity.defKey}} where {{=pkField}} = #{{{=pkVarName}}}\n    </delete>\n</mapper>\n\n",
        "Entity": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.entity;\n$blankline\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n\n /**\n * {{=it.entity.defName}};{{=it.entity.comment}}\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@ApiModel(value = \"{{=it.entity.defName}}\",description = \"{{=it.entity.comment}}\")\npublic class {{=beanClass}} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    @ApiModelProperty(name = \"{{=field.defName}}\",notes = \"{{=field.comment}}\")\n    private {{=field.type}} {{=it.func.camel(field.defKey,false)}} ;\n{{~}}\n$blankline\n\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.defKey,true)}}(){\n        return this.{{=it.func.camel(field.defKey,false)}};\n    }\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public void set{{=it.func.camel(field.defKey,true)}}({{=field.type}} {{= it.func.camel(field.defKey,false) }}){\n        this.{{=it.func.camel(field.defKey,false)}}={{=it.func.camel(field.defKey,false)}};\n    }\n{{~}}\n}"
      },
      {
        "applyFor": "A2EE7B4A-CE62-4290-B00C-B26C1BF18073",
        "type": "appCode",
        "Controller": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.controller;\n$blankline\nimport java.util.List;\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.domain.PageImpl;\nimport org.springframework.data.domain.PageRequest;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.service.{{=serviceClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表控制层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Api(tags = \"{{=it.entity.defName}}对象功能接口\")\n@RestController\n@RequestMapping(\"/{{=it.func.camel(it.entity.defKey,false)}}\")\npublic class {{=beanClass}}Controller{\n    @Autowired\n    private {{=serviceClass}} {{=serviceVarName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    @ApiOperation(\"通过ID查询单条数据\")\n    @GetMapping(\"{{{=it.func.camel(pkVarName,false)}}}\")\n    public ResponseEntity<{{=beanClass}}> queryById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.queryById({{=pkVarName}}));\n    }\n    $blankline\n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    @ApiOperation(\"分页查询\")\n    @GetMapping\n    public ResponseEntity<PageImpl<{{=beanClass}}>> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest){\n        //1.分页参数\n        long current = pageRequest.getPageNumber();\n        long size = pageRequest.getPageSize();\n\n        //2.分页查询\n        /*把Mybatis的分页对象做封装转换，MP的分页对象上有一些SQL敏感信息，还是通过spring的分页模型来封装数据吧*/\n        com.baomidou.mybatisplus.extension.plugins.pagination.Page<{{=beanClass}}> pageResult = {{=serviceVarName}}.paginQuery({{=beanVarName}}, current,size);\n\n        //3. 分页结果组装\n        List<{{=beanClass}}> dataList = pageResult.getRecords();\n        long total = pageResult.getTotal();\n        PageImpl<{{=beanClass}}> retPage = new PageImpl<{{=beanClass}}>(dataList,pageRequest,total);\n        return ResponseEntity.ok(retPage);\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"新增数据\")\n    @PostMapping\n    public ResponseEntity<{{=beanClass}}> add({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.insert({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"更新数据\")\n    @PutMapping\n    public ResponseEntity<{{=beanClass}}> edit({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.update({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    @ApiOperation(\"通过主键删除数据\")\n    @DeleteMapping\n    public ResponseEntity<Boolean> deleteById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.deleteById({{=pkVarName}}));\n    }\n}",
        "Service": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.service;\n$blankline\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务接口\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\npublic interface {{=serviceClass}}{\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}});\n    $blankline\n    /**\n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param current 当前页码\n     * @param size  每页大小\n     * @return\n     */\n    Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, long current, long size);\n\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} insert({{=beanClass}} {{=beanVarName}});\n\n    \n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} update({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    boolean deleteById({{=pkDataType}} {{=pkVarName}});\n}",
        "ServiceImpl": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkVarNameU = \"UndefinedId\";\n    var pkFieldKey = \"UNDEFINED\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkFieldKey = field.defKey;\n            pkVarName = it.func.camel(field.defKey,false);\n            pkVarNameU = it.func.camel(field.defKey,true);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    var mapperName = beanVarName+'Mapper';\n    \n}}package {{=pkgName}}.service.impl;\n$blankline\nimport cn.hutool.core.util.StrUtil;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;\nimport com.baomidou.mybatisplus.extension.conditions.update.LambdaUpdateChainWrapper;\n\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.mapper.{{=beanClass}}Mapper;\nimport {{=pkgName}}.service.{{=serviceClass}};\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务实现类\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Service\npublic class {{=serviceClass}}Impl implements {{=serviceClass}}{\n    @Autowired\n    private {{=beanClass}}Mapper {{=mapperName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    public {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}}){\n        return {{=mapperName}}.selectById({{=pkVarName}});\n    }\n    $blankline\n    /**\n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param current 当前页码\n     * @param size  每页大小\n     * @return\n     */\n    public Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, long current, long size){\n        //1. 构建动态查询条件\n        LambdaQueryWrapper<{{=beanClass}}> queryWrapper = new LambdaQueryWrapper<>();\n        {{~it.entity.fields.filter(function(e){return e[\"type\"]===\"String\"&&e.defKey !== pkFieldKey}):field:index}}\n        if(StrUtil.isNotBlank({{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}())){\n            queryWrapper.eq({{=beanClass}}::get{{=it.func.camel(field.defKey,true)}}, {{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}());\n        }\n        {{~}}\n\n        //2. 执行分页查询\n        Page<{{=beanClass}}> pagin = new Page<>(current , size , true);\n        IPage<{{=beanClass}}> selectResult = {{=mapperName}}.selectByPage(pagin , queryWrapper);\n        pagin.setPages(selectResult.getPages());\n        pagin.setTotal(selectResult.getTotal());\n        pagin.setRecords(selectResult.getRecords());\n\n        //3. 返回结果\n        return pagin;\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} insert({{=beanClass}} {{=beanVarName}}){\n        {{=mapperName}}.insert({{=beanVarName}});\n        return {{=beanVarName}};\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} update({{=beanClass}} {{=beanVarName}}){\n        //1. 根据条件动态更新\n        LambdaUpdateChainWrapper<{{=beanClass}}> chainWrapper = new LambdaUpdateChainWrapper<{{=beanClass}}>({{=mapperName}});\n        {{~it.entity.fields.filter(function(e){return e[\"type\"]===\"String\"&&e.defKey !== pkFieldKey}):field:index}}\n        if(StrUtil.isNotBlank({{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}())){\n            chainWrapper.eq({{=beanClass}}::get{{=it.func.camel(field.defKey,true)}}, {{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}());\n        }\n        {{~}}\n        //2. 设置主键，并更新\n        chainWrapper.set({{=beanClass}}::get{{=pkVarNameU}}, {{=beanVarName}}.get{{=pkVarNameU}}());\n        boolean ret = chainWrapper.update();\n        //3. 更新成功了，查询最最对象返回\n        if(ret){\n            return queryById({{=beanVarName}}.get{{=pkVarNameU}}());\n        }else{\n            return {{=beanVarName}};\n        }\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    public boolean deleteById({{=pkDataType}} {{=pkVarName}}){\n        int total = {{=mapperName}}.deleteById({{=pkVarName}});\n        return total > 0;\n    }\n}",
        "Mapper": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.mapper;\n$blankline\n\nimport com.baomidou.mybatisplus.core.conditions.Wrapper;\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.core.toolkit.Constants;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Param;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表数据库访问层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Mapper\npublic interface {{=beanClass}}Mapper  extends BaseMapper<{{=beanClass}}>{\n    /** \n     * 分页查询指定行数据\n     *\n     * @param page 分页参数\n     * @param wrapper 动态查询条件\n     * @return 分页对象列表\n     */\n    IPage<{{=beanClass}}> selectByPage(IPage<{{=beanClass}}> page , @Param(Constants.WRAPPER) Wrapper<{{=beanClass}}> wrapper);\n}",
        "Mapper.xml": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    var pkField = \"UNDEFINED_ID\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkField = field.defKey;\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n$blankline\n\n<mapper namespace=\"{{=pkgName}}.mapper.{{=beanClass}}Mapper\">\n     <select id=\"selectByPage\" resultType=\"{{=pkgName}}.entity.{{=beanClass}}\">\n        select * from user ${ew.customSqlSegment}\n    </select>\n</mapper>\n\n",
        "Entity": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.entity;\n$blankline\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport com.baomidou.mybatisplus.annotation.TableName;\nimport com.baomidou.mybatisplus.annotation.TableId;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n\n /**\n * {{=it.entity.defName}};{{=it.entity.comment}}\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@ApiModel(value = \"{{=it.entity.defName}}\",description = \"{{=it.entity.comment}}\")\n@TableName(\"{{=it.entity.defKey}}\")\npublic class {{=beanClass}} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    @ApiModelProperty(name = \"{{=field.defName}}\",notes = \"{{=field.comment}}\")\n    {{? field.primaryKey }}\n    @TableId\n    {{?}}\n    private {{=field.type}} {{=it.func.camel(field.defKey,false)}} ;\n{{~}}\n$blankline\n\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.defKey,true)}}(){\n        return this.{{=it.func.camel(field.defKey,false)}};\n    }\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public void set{{=it.func.camel(field.defKey,true)}}({{=field.type}} {{= it.func.camel(field.defKey,false) }}){\n        this.{{=it.func.camel(field.defKey,false)}}={{=it.func.camel(field.defKey,false)}};\n    }\n{{~}}\n}"
      },
      {
        "applyFor": "29D1CE08-4C35-4D2D-AAA9-23D93305B52E",
        "type": "dbDDL",
        "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.dbType}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'AUTO_INCREMENT' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }} COMMENT '{{=it.func.join(field.defName,field.comment,';')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n)  COMMENT = '{{=it.func.join(it.entity.defName,it.entity.comment,';') }}';\n$blankline\n",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
        "deleteTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "deleteIndex": "{{~ it.entity.indexes:index}}\nDROP INDEX {{=index.defKey}} ;\n{{~}}",
        "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}\n",
        "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('ALTER TABLE '+before.defKey+' RENAME TO '+after.defKey);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            ret.push('ALTER TABLE '+after.defKey+' COMMENT \\''+commentText+'\\'');\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldAdded) { \n            let ddlItem = 'ADD COLUMN '+field.defKey+' '+field.dbType;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            if(field.autoIncrement){\n                ddlItem += ' AUTO_INCREMENT';\n            }\n            if(field.defaultValue){\n                ddlItem += (' DEFAULT' + field.defaultValue);\n            }\n            ddlItem += (' COMMENT \\''+field.defName+';'+field.comment+'\\'');\n            \n            if(field.index>0 && field.afterFieldKey){\n                ddlItem += (' AFTER '+field.afterFieldKey);\n            }\n            ret.push(ddlItem);\n        }\n        return firstDDL+'\\n'+ret.join(',\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldRemoved) { \n            ret.push('DROP '+field.defKey);\n        }\n        return firstDDL+'\\n'+ret.join(',\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey === after.defKey){\n                changeDDL += (' MODIFY COLUMN '+after.defKey);\n            }else{\n                changeDDL += (' CHANGE COLUMN '+before.defKey+' '+after.defKey);\n            }\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(field.scale)>0){\n                    changeDDL += (','+field.scale);\n                }\n                changeDDL += ')';\n            }\n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            let defaultValue = '';\n            if(after.defaultValue != null && after.defaultValue.length>0){\n                defaultValue = (after.defaultValue);\n            }else{\n                defaultValue = 'NULL';\n            }\n            changeDDL += (' DEFAULT ' + defaultValue);\n            let comment = after.comment||'';\n            changeDDL += (' COMMENT \\''+comment+'\\';');\n            ret.push(firstDDL+' '+changeDDL);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
      },
      {
        "applyFor": "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542",
        "type": "dbDDL",
        "createTable": "CREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? '' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
        "deleteTable": "DROP TABLE {{=it.entity.defKey}};",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "deleteIndex": "{{~ it.entity.indexes:index}}\nDROP INDEX {{=index.defKey}} ;\n{{~}}",
        "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* -------------------------------------------------- */\n创建表：\n{{~ createEntities:entity}}\n    {{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* -------------------------------------------------- */\n删除表：\n{{~ dropEntities:entity}}\n    {{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* -------------------------------------------------- */\n修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n    {{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n    {{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n    {{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n    {{?}}{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}\n    {{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('\\n\\t建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('\\n\\t解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}\n{{=indexChanged?'\\n\\t更改了索引':''}}\n{{=changed?'\\n\\t更改了属性':''}}\n{{=relaArray.length>0?relaArray.join(''):''}}\n{{~}}\n{{?}}",
        "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`ALTER TABLE ${before.defKey} RENAME TO ${after.defKey}`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `COMMENT ON TABLE ${after.defKey} IS '${commentText}'`;\n            ret.push(myText);\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD (${field.defKey} ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            ddlItem += ')';\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `COMMENT ON COLUMN ${entity.data.baseInfo.defKey}.${field.defKey} IS '${commentText}'`;\n                 ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN ${field.defKey}`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey !== after.defKey){\n                let renameText = `ALTER TABLE ${entity.data.baseInfo.defKey} RENAME COLUMN ${before.defKey} TO ${after.defKey};`;\n                ret.push(renameText);\n            }\n            /*如果没有变化，则不生成变更语句*/\n            if(before.dbType === after.dbType \n            && before['len'] === after['len'] \n            && before.scale === after.scale\n            && before.primaryKey === after.primaryKey\n            && before.notNull === after.notNull\n            && before.autoIncrement === after.autoIncrement\n            && before.defaultValue === after.defaultValue){\n                continue;\n            }\n            changeDDL += ('MODIFY ('+after.defKey+'');\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(field.scale)>0){\n                    changeDDL += (','+field.scale);\n                }\n                changeDDL += ')';\n            }\n            let defaultValue = after.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n            \n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            changeDDL += ')';\n            ret.push(`${firstDDL} ${changeDDL};`);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
      },
      {
        "applyFor": "BFC87171-C74F-494A-B7C2-76B9C55FACC9",
        "type": "dbDDL",
        "createTable": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[{{=it.entity.defKey}}]') AND type in (N'U')) DROP TABLE [dbo].[{{=it.entity.defKey}}];\n\nCREATE TABLE [dbo].[{{=it.entity.defKey}}](\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? ' IDENTITY(1,1)' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}EXEC sp_addextendedproperty 'MS_Description', '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}', 'SCHEMA', dbo, 'table', {{=it.entity.defKey}}, null, null;{{?}}\n{{~it.entity.fields:field:index}}\nEXEC sp_addextendedproperty 'MS_Description', '{{=it.func.join(field.defName,field.comment,';')}}', 'SCHEMA', dbo, 'table', {{=it.entity.defKey}}, 'column', {{=field.defKey}};\n{{~}}\n",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
        "deleteTable": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[{{=it.entity.defKey}}]') AND type in (N'U')) DROP TABLE [dbo].[{{=it.entity.defKey}}];",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "deleteIndex": "",
        "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}",
        "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`EXEC sp_rename '${before.defKey}','${after.defKey}'`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `IF ((SELECT COUNT(*) FROM ::fn_listextendedproperty('MS_Description','SCHEMA', 'dbo','TABLE', '${after.defKey}', NULL, NULL)) > 0)\n            \\n\\tEXEC sp_updateextendedproperty 'MS_Description', '${commentText}','SCHEMA', 'dbo','TABLE', '${after.defKey}'\n            \\nELSE\n            \\n\\tEXEC sp_addextendedproperty 'MS_Description', '${commentText}', 'SCHEMA', 'dbo','TABLE', '${after.defKey}'\n            `;\n            ret.push(myText);\n            /*ret.push('ALTER TABLE '+after.defKey+' COMMENT \\''+commentText+'\\'');*/\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE [dbo].[${entity.data.baseInfo.defKey}]`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD [${field.defKey}] ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `EXEC sp_addextendedproperty 'MS_Description', N'${commentText}','SCHEMA', N'dbo','TABLE', N'${entity.data.baseInfo.defKey}','COLUMN', N'${field.defKey}'`;\n                ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE [dbo].[${entity.data.baseInfo.defKey}]`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN [${field.defKey}]`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE [dbo].[${entity.data.baseInfo.defKey}]`;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey === after.defKey){\n                changeDDL += (' ALTER COLUMN ['+after.defKey+']');\n            }else{\n                let renameText = `EXEC sp_rename '[dbo].[${entity.data.baseInfo.defKey}].[${before.defKey}]','${after.defKey}','COLUMN';`;\n                ret.push(renameText);\n                continue;\n            }\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            let defaultValue = after.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n            \n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            ret.push(`${firstDDL} ${changeDDL};`);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
      },
      {
        "applyFor": "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022",
        "type": "dbDDL",
        "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{? field.autoIncrement}}SERIAL{{??}}{{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
        "deleteTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "deleteIndex": "{{~ it.entity.indexes:index}}\nDROP INDEX {{=index.defKey}} ;\n{{~}}",
        "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}",
        "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`ALTER TABLE ${before.defKey} RENAME TO ${after.defKey}`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `COMMENT ON TABLE ${after.defKey} IS '${commentText}'`;\n            ret.push(myText);\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD COLUMN ${field.defKey} ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }            \n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `COMMENT ON COLUMN ${entity.data.baseInfo.defKey}.${field.defKey} IS '${commentText}'`;\n                 ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN ${field.defKey}`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldModified) { \n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey !== after.defKey){\n                let renameText = `ALTER TABLE ${entity.data.baseInfo.defKey} RENAME COLUMN ${before.defKey} TO ${after.defKey};`;\n                ret.push(renameText);\n            }\n            /*如果没有变化，则不生成变更语句*/\n            if(before.dbType === after.dbType \n            && before['len'] === after['len'] \n            && before.scale === after.scale\n            && before.primaryKey === after.primaryKey\n            && before.notNull === after.notNull\n            && before.autoIncrement === after.autoIncrement\n            && before.defaultValue === after.defaultValue){\n                continue;\n            }\n            if(before.dbType !== after.dbType || before.len !== after.len || before.scale !== after.scale){\n                let dbTypeDDL = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${after.defKey} TYPE ${before.dbType}`;\n                if(after.len>0){\n                    dbTypeDDL += ('('+after.len);\n                    if(parseInt(after.scale)>0){\n                        dbTypeDDL += (','+after.scale);\n                    }\n                    dbTypeDDL += ')';\n                }\n                ret.push(dbTypeDDL+';');\n            }\n            \n            if(before.defaultValue !== after.defaultValue){\n                let defaultDDL = '';\n                let defaultValue = after.defaultValue;\n                defaultValue = (defaultValue==null)?\"NULL\":(\"\"+defaultValue);\n                if(defaultValue.length>0){\n                    defaultDDL += ('SET DEFAULT ' + defaultValue);\n                }\n                let defaultTpl = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${defaultDDL};`;\n                ret.push(defaultTpl);\n            }\n            \n            if(before.notNull !== after.notNull){\n                let notNullDDL= 'SET NULL';\n                if(after.notNull){\n                    let notNullDDL= 'SET NOT NULL';\n                }\n                let notNullTpl = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${notNullDDL};`;\n                ret.push(notNullTpl);\n            }\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n-- 索引重建\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
      },
      {
        "type": "dbDDL",
        "applyFor": "89504F5D-94BF-4C9E-8B2E-44F37305FED5",
        "createTable": "CREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? '' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
      },
      {
        "type": "dbDDL",
        "applyFor": "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307",
        "createTable": "CREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? '' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ','('+field.defaultValue+')',' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
      },
      {
        "type": "dbDDL",
        "applyFor": "592C7013-143D-4E7B-AF64-0D7BF1E28230",
        "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? ' AUTO_INCREMENT' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
      },
      {
        "type": "dbDDL",
        "applyFor": "77BD85E5-9D0D-4096-8427-CBA306FC9C6A",
        "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
      },
      {
        "applyFor": "11D1FB71-A587-4217-89BA-611B8A1F83E0",
        "type": "dbDDL",
        "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'AUTO_INCREMENT' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }} COMMENT '{{=it.func.join(field.defName,field.comment,';')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n)  COMMENT '{{=it.func.join(it.entity.defName,it.entity.comment,';') }}';\n$blankline\n",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
        "deleteTable": "",
        "createIndex": "",
        "deleteIndex": "",
        "message": "",
        "update": ""
      },
      {
        "applyFor": "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1",
        "type": "dbDDL",
        "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'AUTOINCREMENT' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }} --{{=it.func.join(field.defName,field.comment,';')}}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n)  ; --{{=it.func.join(it.entity.defName,it.entity.comment,';') }}\n$blankline\n",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
      },
      {
        "type": "dbDDL",
        "applyFor": "dictSQLTemplate",
        "content": "/* 插入字典总表[{{=it.dict.defKey}}-{{=it.dict.defName}}] */\nINSERT INTO SYS_DICT(KEY_,LABEL,INTRO,REVISION) VALUES('{{=it.dict.defKey}}','{{=it.dict.defName}}','{{=it.dict.intro}}',1);\n/* 插入字典明细表 */\n{{~it.dict.items:item:index}}\nINSERT INTO SYS_DICT_ITEM(DICT_KEY,KEY_,LABEL,SORT_,INTRO,REVISION) VALUES('{{=it.dict.defKey}}','{{=item.defKey}}','{{=item.defName}}','{{=item.sort}}','{{=item.intro}}',1);\n{{~}}"
      },
      {
        "applyFor": "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2",
        "type": "dbDDL",
        "createTable": "/**字段名,关键字等全部用的小写*/\ndrop table if exists {{=it.entity.defKey}};\n/**补充上库名,external关键字根据建表规范看是否添加*/\ncreate [external] table if not exists {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n/**这里把varchar,char,text,date,datetime字段全部映射为string类型.tinyint unsigned,bit,Integer,tinyint,smallint,mediumint映射为int类型,int unsigned映射为bigint.其它自定义映射规则根据自己情况修改*/\n/**当长度>0只有为decimal类型或double类型时才保留长度和小数的位数*/\n{{~it.entity.fields:field:index}}\n    {{=it.func.lowerCase(field.defKey)}} {{=it.func.lowerCase(field.dbType)=='varchar'||it.func.lowerCase(field.dbType)=='char'||it.func.lowerCase(field.dbType)=='text'||it.func.lowerCase(field.dbType)=='date'||it.func.lowerCase(field.dbType)=='datetime' ? 'string':it.func.lowerCase(field.dbType)=='tinyint unsigned'||it.func.lowerCase(field.dbType)=='bit'||it.func.lowerCase(field.dbType)=='integer'||it.func.lowerCase(field.dbType)=='tinyint'||it.func.lowerCase(field.dbType)=='smallint'||it.func.lowerCase(field.dbType)=='mediumint' ? 'int':it.func.lowerCase(field.dbType)=='int unsigned' ? 'bigint':it.func.lowerCase(field.dbType)}}{{?field.len>0&&(it.func.lowerCase(field.dbType)=='decimal'||it.func.lowerCase(field.dbType)=='double')}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{=')'}}{{?}}{{?}} comment '{{=it.func.join(field.defName,field.comment,'')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n{{?}}\n)\n{{\n    let partitionedBy = it.entity.properties['partitioned by'];\n    partitionedBy = partitionedBy?partitionedBy:'请在扩展属性中配置[partitioned by]属性';\n}}\ncomment '{{=it.func.join(it.entity.defName,';') }}'\n/**是否分区表,分区字段名和字段注释自定义*/\n[partitioned by {{=partitionedBy}}]\n/**文件存储格式自定义*/\n[stored as orc]\n/**hdfs上的地址自定义*/\n[location xxx]\n;",
        "createView": "",
        "deleteTable": "",
        "createIndex": "",
        "deleteIndex": "",
        "message": "",
        "update": ""
      },
      {
        "applyFor": "B91D99E0-9B7C-416C-8737-B760957DAF09",
        "type": "appCode",
        "content": "{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1<10?\"0\"+today.getMonth():today.getMonth();\n    var days=today.getDate()<10?\"0\"+today.getDate():today.getDate();\n    var hours = today.getHours()<10?\"0\"+today.getHours():today.getHours();         \n\tvar minutes = today.getMinutes()<10?\"0\"+today.getMinutes():today.getMinutes();      \n\tvar seconds = today.getSeconds()<10?\"0\"+today.getSeconds():today.getSeconds();    \n}}\n// Package models  {{=it.func.join(it.entity.defName,it.entity.comment,'，')}}\n// author : http://www.liyang.love\n// date : {{=fullYear}}-{{=month}}-{{=days}} {{=hours}}:{{=minutes}}\n// desc : {{=it.func.join(it.entity.defName,it.entity.comment,'，')}}\npackage models\n\n$blankline\n\n// {{=it.func.camel(it.entity.defKey,true) }}  {{=it.func.join(it.entity.defName,it.entity.comment,'，')}}。\n// 说明:{{=it.entity.comment}}\n// 表名:{{=it.entity.defKey}}\n// group: {{=it.func.camel(it.entity.defKey,true) }}\n// obsolete:\n// appliesto:go 1.8+;\n// namespace:hongmouer.his.models.{{=it.func.camel(it.entity.defKey,true) }}\n// assembly: hongmouer.his.models.go\n// class:HongMouer.HIS.Models.{{=it.func.camel(it.entity.defKey,true) }}\n// version:{{=fullYear}}-{{=month}}-{{=days}} {{=hours}}:{{=minutes}}\ntype {{=it.func.camel(it.entity.defKey,true) }} struct {\n    {{~it.entity.fields:field:index}}\n    {{=formatGoLang(it.func.camel(field.defKey,true),null,field,it.entity.fields,null,1)}} {{=formatGoLang(field.type,\"type\",field,it.entity.fields,10,3)}}  `gorm:\"column:{{=field.primaryKey?\"primaryKey;\":\"\"}}{{=field.defKey}}\" json:\"{{=it.func.camel(field.defKey,true)}}\"` {{=formatGoLang(\"gorm:column:\"+field.defKey+\" json:\"+it.func.camel(field.defKey,true),null,field,it.entity.fields,null,2)}}  //type:{{=formatGoLang(field.type,\"type\",field,it.entity.fields,null,3)}}  comment:{{=formatGoLang(it.func.join(field.defName,field.comment,';'),\"defName\",field,it.entity.fields,null,4)}}  version:{{=fullYear}}-{{=month}}-{{=days}} {{=hours}}:{{=minutes}}\n    {{~}}\n}\n\n\n$blankline\n// TableName 表名:{{=it.entity.defKey}}，{{=it.entity.defName}}。\n// 说明:{{=it.entity.comment}}\nfunc (ZentaoUserInfo) TableName() string {\n\treturn \"{{=it.entity.defKey}}\"\n}\n\n{{\n\nfunction formatGoLang(str, fieldName, field, fileds, emptLength, isFiled) {\n    var maxLength = 0;\n\n    if (isFiled == 1) {\n        for (var i = 0; i < fileds.length; i++) {\n            if (getBlength(it.func.camel(fileds[i].defKey, true)) > maxLength) {\n                maxLength = getBlength(it.func.camel(fileds[i].defKey, true)) + 2;\n            }\n        }\n    } else if (isFiled == 2) {\n        for (var i = 0; i < fileds.length; i++) {\n            var newStr = \"gorm:column:\" + fileds[i].defKey + \" json:\" + it.func.camel(fileds[i].defKey, true);\n            if (getBlength(newStr) > maxLength) {\n                maxLength = getBlength(newStr) + 2;\n            }\n        }\n        var empt = \"\";\n        var strLength = getBlength(str);\n        if (field.primaryKey) {\n            strLength += getBlength(\"primaryKey;\");\n        }\n        for (var j = 0; j < maxLength - strLength; j++) {\n            empt += ' ';\n        }\n        return empt;\n    } else if (isFiled == 3) {\n        /*获取某个字段的最大长度*/\n        for (var i = 0; i < fileds.length; i++) {\n            var newStr = eval(\"fileds[\" + i + \"].\" + fieldName);\n            if (getBlength(newStr) > maxLength) {\n                maxLength = getBlength(newStr) + 1;\n            }\n        }\n    } else if (isFiled == 4) {\n        /*获取某个字段的最大长度*/\n        for (var i = 0; i < fileds.length; i++) {\n            var newStr = fileds[i].comment + \";\" + fileds[i].defName;\n            if (getBlength(newStr) > maxLength) {\n                maxLength = getBlength(newStr) + 1;\n            }\n        }\n    }\n    else {\n        maxLength = emptLength;\n    }\n\n    var strLength = getBlength(str);\n    for (var j = 0; j < maxLength - strLength; j++) {\n        str += ' ';\n    }\n    return str;\n}\n\nfunction getBlength(str) {\n    var n = 0;\n    for (var i = str.length; i--;) {\n        n += str.charCodeAt(i) > 255 ? 2 : 1;\n    }\n    return n;\n} \n\n}}"
      }
    ],
    "generatorDoc": {
      "docTemplate": ""
    },
    "relationFieldSize": "15",
    "uiHint": [
      {
        "defKey": "Input",
        "defName": "普通输入框",
        "id": "642D2E0A-8846-4549-BE56-8C0473F26EDE"
      },
      {
        "defKey": "Select",
        "defName": "下拉输入框",
        "id": "FB111359-2B73-4443-926C-08A98E446448"
      },
      {
        "defKey": "CheckBox",
        "defName": "复选框",
        "id": "0CB8A6C9-1115-4FC0-B51E-5C028065082F"
      },
      {
        "defKey": "RadioBox",
        "defName": "单选框",
        "id": "5C04987A-260F-4B7C-A5D5-22A181AAE9CA"
      },
      {
        "defKey": "Double",
        "defName": "小数输入",
        "id": "8D5BAFE4-E15C-4707-A047-8EE59C58E70F"
      },
      {
        "defKey": "Integer",
        "defName": "整数输入",
        "id": "9999AF2A-A44E-415C-A2DC-D7C613BD0073"
      },
      {
        "defKey": "Money",
        "defName": "金额输入",
        "id": "2B0C3D0C-7BAF-4B36-81AD-9362B5E5DC2E"
      },
      {
        "defKey": "Date",
        "defName": "日期输入",
        "id": "E4D94E14-F695-487F-AFC2-4D888009B7DA"
      },
      {
        "defKey": "DataYearMonth",
        "defName": "年月输入",
        "id": "936927E3-DD2D-4096-87FD-074CDE278D59"
      },
      {
        "defKey": "Text",
        "defName": "长文本输入",
        "id": "D89DD4F1-ADAC-4469-BF8D-B3FF41AE7963"
      },
      {
        "defKey": "RichText",
        "defName": "富文本输入",
        "id": "C134EB1F-4CFF-49E0-882F-2C6FB275CB20"
      }
    ],
    "headers": [
      {
        "refKey": "defKey",
        "hideInGraph": false
      },
      {
        "refKey": "defName",
        "hideInGraph": false
      },
      {
        "refKey": "primaryKey",
        "hideInGraph": false
      },
      {
        "refKey": "notNull",
        "hideInGraph": true
      },
      {
        "refKey": "autoIncrement",
        "hideInGraph": true
      },
      {
        "refKey": "domain",
        "hideInGraph": true
      },
      {
        "refKey": "type",
        "hideInGraph": false
      },
      {
        "refKey": "len",
        "hideInGraph": false
      },
      {
        "refKey": "scale",
        "hideInGraph": false
      },
      {
        "refKey": "comment",
        "hideInGraph": true
      },
      {
        "refKey": "refDict",
        "hideInGraph": true
      },
      {
        "refKey": "defaultValue",
        "hideInGraph": true
      },
      {
        "refKey": "isStandard",
        "hideInGraph": false
      },
      {
        "refKey": "uiHint",
        "hideInGraph": true
      },
      {
        "refKey": "extProps",
        "hideInGraph": true
      }
    ]
  },
  "entities": [
    {
      "defKey": "SIMS_COLLEGE",
      "defName": "学院",
      "comment": "",
      "properties": {
        "partitionBy": ""
      },
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true,
          "freeze": true
        },
        {
          "refKey": "defKey",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "defName",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "primaryKey",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "notNull",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "autoIncrement",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "domain",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "type",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "len",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "scale",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "comment",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "refDict",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "defaultValue",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "isStandard",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "hideInGraph": true,
          "freeze": false
        }
      ],
      "fields": [
        {
          "defKey": "COLLEGE_ID",
          "defName": "学院ID",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "9651B83A-2208-4F1E-A870-C3C4E1FAF103"
        },
        {
          "defKey": "COLLEGE_NAME",
          "defName": "学院名称",
          "comment": "",
          "len": 90,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "04BE6748-E056-428D-BFA8-B04F4CE843B3"
        },
        {
          "defKey": "SHORT_NAME",
          "defName": "学院简称",
          "comment": "",
          "len": 90,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "41E142D0-1539-4E99-83D7-41672E03BFEE"
        },
        {
          "defKey": "INTRO",
          "defName": "学院介绍",
          "comment": "",
          "len": "900",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "3E948CEC-3070-472C-AF92-F3CA11EC9D15",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "53B857E0-25ED-4666-8437-FD8C68748C85"
        },
        {
          "defKey": "PROFESSION_NUMBER",
          "defName": "专业个数",
          "comment": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "type": "INT",
          "refDict": "",
          "uiHint": "",
          "id": "BDDAC28C-5DF2-4551-9FEA-D956D7C510EA"
        },
        {
          "defKey": "STUDENT_NUMBER",
          "defName": "学生人数",
          "comment": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "type": "INT",
          "refDict": "",
          "uiHint": "",
          "id": "9993DFC9-B6DD-4A15-9DA5-EE7DEE011A4D"
        },
        {
          "defKey": "PRESIDENT",
          "defName": "院长",
          "comment": "",
          "len": 90,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "CC08D659-F79E-4A52-B274-5E07B7533A72"
        },
        {
          "defKey": "TENANT_ID",
          "defName": "租户号",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "8EB6E9A5-6DA4-44DC-8519-E100B189651E"
        },
        {
          "defKey": "REVISION",
          "defName": "乐观锁",
          "comment": "",
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "INT",
          "refDict": "",
          "uiHint": "",
          "id": "913C460B-E48B-4563-886B-C0CC71E5A54B"
        },
        {
          "defKey": "CREATED_BY",
          "defName": "创建人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "3D37BF7C-E283-47DA-870E-002AB6DB6704"
        },
        {
          "defKey": "CREATED_TIME",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "2B8ED950-CDCE-4323-BD61-CBE0173AE679"
        },
        {
          "defKey": "UPDATED_BY",
          "defName": "更新人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "43FD5A95-5EE1-4316-B708-AC61B32FE9AE"
        },
        {
          "defKey": "UPDATED_TIME",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "1868F7F4-8F4D-403D-ABA0-60D89BE37066"
        }
      ],
      "correlations": [],
      "id": "26B8D13E-BE37-4E20-8496-13A586E84581",
      "indexes": []
    },
    {
      "defKey": "SIMS_MAJOR",
      "defName": "专业",
      "comment": "",
      "properties": {
        "partitionBy": ""
      },
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true,
          "freeze": true
        },
        {
          "refKey": "defKey",
          "hideInGraph": false,
          "code": "name",
          "value": "字段代码",
          "newCode": "defKey",
          "com": "Input",
          "relationNoShow": false,
          "freeze": false
        },
        {
          "refKey": "defName",
          "hideInGraph": false,
          "code": "chnname",
          "value": "显示名称",
          "newCode": "defName",
          "com": "Input",
          "relationNoShow": false,
          "freeze": false
        },
        {
          "refKey": "primaryKey",
          "hideInGraph": false,
          "code": "pk",
          "value": "主键",
          "newCode": "primaryKey",
          "com": "Checkbox",
          "relationNoShow": false,
          "freeze": false
        },
        {
          "refKey": "notNull",
          "hideInGraph": true,
          "code": "notNull",
          "value": "不为空",
          "newCode": "notNull",
          "com": "Checkbox",
          "relationNoShow": true,
          "freeze": false
        },
        {
          "refKey": "autoIncrement",
          "hideInGraph": true,
          "code": "autoIncrement",
          "value": "自增",
          "newCode": "autoIncrement",
          "com": "Checkbox",
          "relationNoShow": true,
          "freeze": false
        },
        {
          "refKey": "domain",
          "hideInGraph": true,
          "code": "type",
          "value": "数据域",
          "newCode": "domain",
          "com": "Select",
          "relationNoShow": false,
          "freeze": false
        },
        {
          "refKey": "type",
          "hideInGraph": false,
          "code": "dataType",
          "value": "数据类型",
          "newCode": "type",
          "com": "Text",
          "relationNoShow": true,
          "freeze": false
        },
        {
          "refKey": "len",
          "hideInGraph": false,
          "code": "len",
          "value": "长度",
          "newCode": "len",
          "com": "Input",
          "relationNoShow": true,
          "freeze": false
        },
        {
          "refKey": "scale",
          "hideInGraph": true,
          "code": "scale",
          "value": "小数位数",
          "newCode": "scale",
          "com": "Input",
          "relationNoShow": true,
          "freeze": false
        },
        {
          "refKey": "comment",
          "hideInGraph": true,
          "code": "remark",
          "value": "说明",
          "newCode": "remark",
          "com": "Input",
          "relationNoShow": true,
          "freeze": false
        },
        {
          "refKey": "refDict",
          "hideInGraph": true,
          "code": "refDict",
          "value": "数据字典",
          "newCode": "refDict",
          "com": "SearchSelect",
          "relationNoShow": true,
          "freeze": false
        },
        {
          "refKey": "defaultValue",
          "hideInGraph": true,
          "code": "defaultValue",
          "value": "默认值",
          "newCode": "defaultValue",
          "com": "Input",
          "relationNoShow": true,
          "freeze": false
        },
        {
          "refKey": "isStandard",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "hideInGraph": true,
          "freeze": false
        }
      ],
      "fields": [
        {
          "defKey": "MAJOR_ID",
          "defName": "专业ID",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "8707AEB9-3EC5-4EEA-9E14-99BAF28B46B4"
        },
        {
          "defKey": "MAJOR_NAME",
          "defName": "专业名称",
          "comment": "",
          "len": 90,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "3577A78C-D13B-416D-8026-E2CED2929199"
        },
        {
          "defKey": "SHORT_NAME",
          "defName": "专业简称",
          "comment": "",
          "len": 90,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "C2157568-FF44-4BE8-A231-5B98E50DFCEE"
        },
        {
          "defKey": "ESTAB_DATE",
          "defName": "开设日期",
          "comment": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "52DCCDBE-1220-4AF6-A7B6-F7CCE61114CB"
        },
        {
          "defKey": "INTRO",
          "defName": "专业介绍",
          "comment": "",
          "len": "900",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "3E948CEC-3070-472C-AF92-F3CA11EC9D15",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "61C9D879-BD45-408A-BAEC-577E220D67A2"
        },
        {
          "defKey": "TUITION_FEE",
          "defName": "学费",
          "comment": "",
          "len": 24,
          "scale": 8,
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "C3B1681B-99F9-4818-9E80-DE1652A51D85",
          "type": "DECIMAL",
          "refDict": "",
          "uiHint": "",
          "id": "5B5A5E16-AC5E-4184-B561-AEF2D381C898"
        },
        {
          "defKey": "TENANT_ID",
          "defName": "租户号",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "2618820B-865E-4C80-BFEA-50AD5FB1D5D6"
        },
        {
          "defKey": "REVISION",
          "defName": "乐观锁",
          "comment": "",
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "INT",
          "refDict": "",
          "uiHint": "",
          "id": "E3CDC9C7-9DDD-46C4-A617-D253C745E5C7"
        },
        {
          "defKey": "CREATED_BY",
          "defName": "创建人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "9BFE70DA-2B5E-4443-A792-CD9F7B200D35"
        },
        {
          "defKey": "CREATED_TIME",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "660F4ED1-87F4-4C4A-BEA9-E744A2C0CA51"
        },
        {
          "defKey": "UPDATED_BY",
          "defName": "更新人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "96E1502E-EA6D-4D86-8782-92D6AC604CA9"
        },
        {
          "defKey": "UPDATED_TIME",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "3B7186B6-989F-4C9F-B8ED-F36D20713363"
        }
      ],
      "correlations": [],
      "id": "C2F51B91-7C24-4CB4-8406-706F4851EB0B",
      "indexes": []
    },
    {
      "defKey": "SIMS_CLASS",
      "defName": "班级",
      "comment": "",
      "properties": {
        "partitionBy": ""
      },
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true,
          "freeze": true
        },
        {
          "refKey": "defKey",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "defName",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "primaryKey",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "notNull",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "autoIncrement",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "domain",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "type",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "len",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "scale",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "comment",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "refDict",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "defaultValue",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "isStandard",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "hideInGraph": true,
          "freeze": false
        }
      ],
      "fields": [
        {
          "defKey": "COLLEGE_ID",
          "defName": "所在学院",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "D793F097-1364-49FD-B02C-D4EBBA5A055A"
        },
        {
          "defKey": "MAJOR_ID",
          "defName": "所属专业ID",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "63130D1B-63C8-491C-B36D-5603A30BFB37"
        },
        {
          "defKey": "CLASS_ID",
          "defName": "班级ID",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "6D6BC6AA-8114-4B91-8A2C-4B5FEACEB347"
        },
        {
          "defKey": "CLASS_NAME",
          "defName": "班级名称",
          "comment": "",
          "len": 90,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "782EC244-02B2-4661-BC21-615F7A468BA8"
        },
        {
          "defKey": "STUDENT_NUMBER",
          "defName": "班级人数",
          "comment": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "type": "INT",
          "refDict": "",
          "uiHint": "",
          "id": "85A3FDFD-6131-42F4-A85E-4509E2F81458"
        },
        {
          "defKey": "ADVISER",
          "defName": "辅导员",
          "comment": "",
          "len": 90,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "6BB204C7-1363-4EB4-94B3-555F47C28754"
        },
        {
          "defKey": "ESTAB_DATE",
          "defName": "成立时间",
          "comment": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "54763240-9F13-4490-99D7-CCC0F86A110E"
        },
        {
          "defKey": "YEAR_NUMBER",
          "defName": "学习年数",
          "comment": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "type": "INT",
          "refDict": "",
          "uiHint": "",
          "id": "118E8C4B-0630-4DCD-96C3-186D0AC6FC66"
        },
        {
          "defKey": "TENANT_ID",
          "defName": "租户号",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "9484FAE7-B93C-451B-859B-F7563E218A92"
        },
        {
          "defKey": "REVISION",
          "defName": "乐观锁",
          "comment": "",
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "INT",
          "refDict": "",
          "uiHint": "",
          "id": "45833E99-76D8-483A-B303-DC4C1699DCAE"
        },
        {
          "defKey": "CREATED_BY",
          "defName": "创建人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "71FAA0D7-FC33-4FE7-A8A2-E9C4BBDB7EDD"
        },
        {
          "defKey": "CREATED_TIME",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "18F2D7E1-428D-4138-9990-D7FDF7D34D34"
        },
        {
          "defKey": "UPDATED_BY",
          "defName": "更新人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "B6DA6C8A-2FF6-4759-B610-D5374035FEBE"
        },
        {
          "defKey": "UPDATED_TIME",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "1DAB3A13-B7D2-46AD-8DE1-89DA5ADDB3DE"
        }
      ],
      "correlations": [],
      "id": "C698249E-307D-4087-9EC4-3BABCFC00660",
      "indexes": []
    },
    {
      "defKey": "SIMS_STUDENT",
      "defName": "学生",
      "comment": "",
      "properties": {
        "partitioned by": "(pt_d string)",
        "row format delimited": "",
        "fields terminated by": "','",
        "collection items terminated by": "'-'"
      },
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true,
          "freeze": true
        },
        {
          "refKey": "defKey",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "defName",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "primaryKey",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "notNull",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "autoIncrement",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "domain",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "type",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "len",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "scale",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "comment",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "refDict",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "defaultValue",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "isStandard",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "hideInGraph": true,
          "freeze": false
        }
      ],
      "fields": [
        {
          "defKey": "COLLEGE_ID",
          "defName": "所在学院ID",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "84ADFE5C-3750-4E38-AC46-7AD11E869B41"
        },
        {
          "defKey": "CLASS_ID",
          "defName": "所在班级ID",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "1BCE9672-14BA-4B2B-B8C6-222CC6CF0F61"
        },
        {
          "defKey": "STUDENT_ID",
          "defName": "学生ID",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": true,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "5FAE5CA5-B7A6-40C3-878D-1BB3D4A45B5C"
        },
        {
          "defKey": "STUDENT_NAME",
          "defName": "学生姓名",
          "comment": "",
          "len": 90,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "51D4FD5A-9EFB-4318-A5D6-6317D630D043"
        },
        {
          "defKey": "ENG_NAME",
          "defName": "英文名",
          "comment": "",
          "len": 90,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "6A9A2D74-E294-497E-8A0F-0DF671A7F4EE"
        },
        {
          "defKey": "ID_CARD_NO",
          "defName": "身份证号",
          "comment": "",
          "len": "60",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "47AEF665-86ED-40A2-88DB-79BF561CCE32"
        },
        {
          "defKey": "MOBILE_PHONE",
          "defName": "手机号",
          "comment": "",
          "len": "60",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "8D412D1B-5BE4-4031-8293-EE7EA4E65BCE"
        },
        {
          "defKey": "GENDER",
          "defName": "性别",
          "comment": "",
          "len": "32",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "'M'",
          "hideInGraph": false,
          "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
          "refDict": "BF9E20E0-80D3-486D-BD58-5FADCF3E4A1D",
          "type": "VARCHAR",
          "uiHint": "",
          "id": "C1960E6F-08D3-4773-BF97-57AB8D86FD5C"
        },
        {
          "defKey": "MONTHLY_SALARY",
          "defName": "月薪",
          "comment": "",
          "len": 24,
          "scale": 6,
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "C3B1681B-99F9-4818-9E80-DE1652A51D85",
          "type": "DECIMAL",
          "refDict": "",
          "uiHint": "",
          "id": "7D073DAB-3675-40A5-BDA5-E6D6F0B75CA7"
        },
        {
          "defKey": "BIRTH",
          "defName": "出生日期",
          "comment": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "F705D168-2A65-4C82-8135-DDC85032F855"
        },
        {
          "defKey": "AVATAR",
          "defName": "头像",
          "comment": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "type": "INT",
          "refDict": "",
          "uiHint": "",
          "id": "F5F7AACF-2046-4879-9095-098FD2020E9A"
        },
        {
          "defKey": "HEIGHT",
          "defName": "身高",
          "comment": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "type": "INT",
          "refDict": "",
          "uiHint": "",
          "id": "050036B4-0F46-4E58-9375-805208E87A71"
        },
        {
          "defKey": "WEIGHT",
          "defName": "体重",
          "comment": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "type": "INT",
          "refDict": "",
          "uiHint": "",
          "id": "AB6E2104-5A5C-4B24-8C27-BF9082C87004"
        },
        {
          "defKey": "NATION",
          "defName": "名族",
          "comment": "",
          "len": "32",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "'01'",
          "hideInGraph": false,
          "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
          "refDict": "115EDEFC-0323-410E-81AB-CCAB8879837A",
          "type": "VARCHAR",
          "uiHint": "",
          "id": "60841340-4D1A-4366-B8CC-CCE3B009DD87"
        },
        {
          "defKey": "POLITICAL",
          "defName": "政治面貌",
          "comment": "",
          "len": "32",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
          "refDict": "06EED564-BBA9-4747-8D73-AF809A330CB8",
          "type": "VARCHAR",
          "uiHint": "",
          "id": "BD431E79-93A8-4FB7-83D4-046DA0A54F76"
        },
        {
          "defKey": "MARITAL",
          "defName": "婚姻状况",
          "comment": "",
          "len": "32",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "'UNMARRIED'",
          "hideInGraph": true,
          "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
          "refDict": "EA1587B7-3954-437A-BFE0-FCB0453BCABA",
          "type": "VARCHAR",
          "uiHint": "",
          "id": "1BE185DC-216C-4264-A594-9FC766DD8F82"
        },
        {
          "defKey": "DOMICILE_PLACE_PROVINCE",
          "defName": "籍贯（省）",
          "comment": "",
          "len": "60",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "59F27EDC-6256-4778-9F80-17027C3FA2CA"
        },
        {
          "defKey": "DOMICILE_PLACE_CITY",
          "defName": "籍贯（市）",
          "comment": "",
          "len": "60",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "2D97524F-666A-4E6D-89B5-44598FEDE0FF"
        },
        {
          "defKey": "DOMICILE_PLACE_ADDRESS",
          "defName": "户籍地址",
          "comment": "",
          "len": "60",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "AB597B75-9A96-4A23-ACB5-44ACF237AFA0"
        },
        {
          "defKey": "HOBBY",
          "defName": "爱好",
          "comment": "",
          "len": "60",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "8D847450-A7A0-4DA4-AF6D-0890CF77C4A6"
        },
        {
          "defKey": "INTRO",
          "defName": "简要介绍",
          "comment": "",
          "len": "900",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "domain": "3E948CEC-3070-472C-AF92-F3CA11EC9D15",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "1BFC4737-B5E1-4FD2-8388-C027B604EEC7"
        },
        {
          "defKey": "PRESENT_ADDRESS",
          "defName": "居住地址",
          "comment": "",
          "len": "60",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "DDD1F108-23F0-4754-805E-E01F0129DFFF"
        },
        {
          "defKey": "EMAIL",
          "defName": "电子邮件",
          "comment": "",
          "len": "60",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "40AFC519-70CE-4477-A1AD-0A44A3A591C5"
        },
        {
          "defKey": "ENTRY_DATE",
          "defName": "入学日期",
          "comment": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "35AD45EE-6BCF-4D86-8EDB-F49037D746CA"
        },
        {
          "defKey": "STATUS",
          "defName": "状态",
          "comment": "",
          "len": "32",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "'Normal'",
          "hideInGraph": true,
          "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
          "refDict": "4642BC5F-02EE-4E17-A60C-CF22F86A0282",
          "type": "VARCHAR",
          "uiHint": "",
          "id": "82343970-31F4-4457-A2F8-876B058FED17"
        },
        {
          "defKey": "TENANT_ID",
          "defName": "租户号",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "8BB51B25-9448-4415-B11C-E698B873C8F2"
        },
        {
          "defKey": "REVISION",
          "defName": "乐观锁",
          "comment": "",
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "INT",
          "refDict": "",
          "uiHint": "",
          "id": "7188C7FB-468C-4C26-8368-70425DB901C1"
        },
        {
          "defKey": "CREATED_BY",
          "defName": "创建人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "44F67AB1-1058-4098-8BA9-709A25F74F69"
        },
        {
          "defKey": "CREATED_TIME",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "sysdate",
          "hideInGraph": true,
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "674F8100-E364-40E0-817B-EE3A41BF45C5"
        },
        {
          "defKey": "UPDATED_BY",
          "defName": "更新人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "35782438-EA32-47AA-955C-1B2AD50F8E7A"
        },
        {
          "defKey": "UPDATED_TIME",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "41AFEC1A-F0E0-4BD9-8F72-BF3DF29B7B7C"
        }
      ],
      "correlations": [],
      "indexes": [
        {
          "defKey": "idx_smis_student_01",
          "defName": null,
          "unique": false,
          "comment": "",
          "fields": [
            {
              "fieldDefKey": "51D4FD5A-9EFB-4318-A5D6-6317D630D043",
              "ascOrDesc": "A",
              "id": "417852EB-4D7B-4D09-8916-1C4B88B7D3D4"
            },
            {
              "fieldDefKey": "6A9A2D74-E294-497E-8A0F-0DF671A7F4EE",
              "ascOrDesc": "A",
              "id": "933B0DD4-ACE2-4B93-964F-795F3AF35BB7"
            }
          ],
          "id": "72F8D1D3-4C8E-4FE1-9676-8E56FC1A3652"
        },
        {
          "defKey": "idx_smis_student_cert",
          "defName": null,
          "unique": false,
          "comment": "",
          "fields": [
            {
              "fieldDefKey": "47AEF665-86ED-40A2-88DB-79BF561CCE32",
              "ascOrDesc": "A",
              "id": "407B309C-7A25-415D-A265-E443EDA5A897"
            }
          ],
          "id": "3EE040D0-4E06-4834-899B-C6B1FB304019"
        }
      ],
      "id": "0FC9DB49-4FDB-437E-83E9-7EE803F1CC84"
    },
    {
      "defKey": "SIMS_TEACHER",
      "defName": "教师",
      "comment": "",
      "properties": {
        "partitionBy": ""
      },
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true,
          "freeze": true
        },
        {
          "refKey": "defKey",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "defName",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "primaryKey",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "notNull",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "autoIncrement",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "domain",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "type",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "len",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "scale",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "comment",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "refDict",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "defaultValue",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "isStandard",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "hideInGraph": true,
          "freeze": false
        }
      ],
      "fields": [
        {
          "defKey": "COLLEGE_ID",
          "defName": "所在学院ID",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "EFD22F94-E1D0-4CAD-947D-E856A997D7B5"
        },
        {
          "defKey": "TEACHER_ID",
          "defName": "教师ID",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "C5916046-F140-4B0C-BF84-EBD7DDB38EAA"
        },
        {
          "defKey": "TEACHER_NAME",
          "defName": "姓名",
          "comment": "",
          "len": 90,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "EAA04B36-6088-4677-8694-DE53A75DE0AD"
        },
        {
          "defKey": "GENDER",
          "defName": "性别",
          "comment": "",
          "len": "32",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "'M'",
          "hideInGraph": false,
          "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
          "refDict": "BF9E20E0-80D3-486D-BD58-5FADCF3E4A1D",
          "type": "VARCHAR",
          "uiHint": "",
          "id": "1F013EA0-19A0-45DB-9801-9F6D8E206B76"
        },
        {
          "defKey": "BIRTH",
          "defName": "出生日期",
          "comment": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "86F51625-13F1-42F3-9414-CA3108880DAE"
        },
        {
          "defKey": "GRADUATE_INSTITUTION",
          "defName": "毕业院校",
          "comment": "",
          "len": 90,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "C10DFCF8-3EC4-4B85-BAA7-ACEC989D842F"
        },
        {
          "defKey": "PRACTICE_YEARS",
          "defName": "从业年限",
          "comment": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "type": "INT",
          "refDict": "",
          "uiHint": "",
          "id": "D789B585-FFD8-440E-BEE2-46FB298F49A7"
        },
        {
          "defKey": "POLITICAL",
          "defName": "政治面貌",
          "comment": "",
          "len": "32",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
          "refDict": "06EED564-BBA9-4747-8D73-AF809A330CB8",
          "isStandard": true,
          "type": "VARCHAR",
          "uiHint": "",
          "id": "569930CE-0BF2-412B-87B1-131FEF19F0E9"
        },
        {
          "defKey": "MARITAL",
          "defName": "婚姻状况",
          "comment": "",
          "len": "32",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "'UNMARRIED'",
          "hideInGraph": false,
          "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
          "refDict": "EA1587B7-3954-437A-BFE0-FCB0453BCABA",
          "isStandard": true,
          "type": "VARCHAR",
          "uiHint": "",
          "id": "68CDDFDD-3B15-4797-BEF9-519D3D67FEDD"
        },
        {
          "defKey": "AVATAR",
          "defName": "头像",
          "comment": "",
          "len": "60",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "CDB182D2-3DE7-4661-AFEE-FA2ADF2437AF"
        },
        {
          "defKey": "INTRO",
          "defName": "介绍",
          "comment": "",
          "len": "900",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "3E948CEC-3070-472C-AF92-F3CA11EC9D15",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "69530973-3EC7-4A60-A685-01D4782D3AF4"
        },
        {
          "defKey": "TENANT_ID",
          "defName": "租户号",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "A3D6FC1B-32DE-4D6B-BD54-B21408409AA9"
        },
        {
          "defKey": "REVISION",
          "defName": "乐观锁",
          "comment": "",
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "INT",
          "refDict": "",
          "uiHint": "",
          "id": "938DCFBD-1497-43A4-AFD4-F4C3FACC9227"
        },
        {
          "defKey": "CREATED_BY",
          "defName": "创建人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "39A27481-D4F9-47DB-961E-0E4483589B72"
        },
        {
          "defKey": "CREATED_TIME",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "2D819E14-1585-4F45-B7AE-6E67FAF5A927"
        },
        {
          "defKey": "UPDATED_BY",
          "defName": "更新人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "681DBA6D-A86C-44C4-A7B5-8E83FF22F78D"
        },
        {
          "defKey": "UPDATED_TIME",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "7376A655-992A-4C94-BAFC-494DA519737D"
        }
      ],
      "correlations": [],
      "id": "536B8B19-C2B3-45D1-ADA8-402C0083FC31",
      "indexes": []
    },
    {
      "defKey": "SIMS_LESSON",
      "defName": "课程",
      "comment": "",
      "properties": {
        "partitionBy": ""
      },
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true,
          "freeze": true
        },
        {
          "refKey": "defKey",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "defName",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "primaryKey",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "notNull",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "autoIncrement",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "domain",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "type",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "len",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "scale",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "comment",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "refDict",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "defaultValue",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "isStandard",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "hideInGraph": true,
          "freeze": false
        }
      ],
      "fields": [
        {
          "defKey": "LESSON_ID",
          "defName": "课程ID",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "3D337B5E-182D-45C7-9752-E2DD4D7CF2BD"
        },
        {
          "defKey": "LESSON_NAME",
          "defName": "课程名",
          "comment": "",
          "len": 90,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "4ECC9FC7-C811-492C-96E3-47C16AFB500A"
        },
        {
          "defKey": "INTRO",
          "defName": "课程说明",
          "comment": "",
          "len": "900",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "3E948CEC-3070-472C-AF92-F3CA11EC9D15",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "CCCF9A57-4961-4239-9C04-640F56A2B1C1"
        },
        {
          "defKey": "HOURS",
          "defName": "学时",
          "comment": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "type": "INT",
          "refDict": "",
          "uiHint": "",
          "id": "E76DF7AC-75A3-485A-8622-D851D8ACD418"
        },
        {
          "defKey": "SCORE",
          "defName": "学分",
          "comment": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "type": "INT",
          "refDict": "",
          "uiHint": "",
          "id": "4AE396AA-8851-4031-9CA3-272E0823298F"
        },
        {
          "defKey": "TENANT_ID",
          "defName": "租户号",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "C86A2449-A8A2-4891-88E0-0E54B799BDD7"
        },
        {
          "defKey": "REVISION",
          "defName": "乐观锁",
          "comment": "",
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "INT",
          "refDict": "",
          "uiHint": "",
          "id": "CFABB61A-ED91-4F0A-AF2F-5292F2F509DA"
        },
        {
          "defKey": "CREATED_BY",
          "defName": "创建人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "D3CF6A33-7127-49B9-92DB-72A36639DFDC"
        },
        {
          "defKey": "CREATED_TIME",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "3BEDED99-A539-485E-BA83-20660B129B3A"
        },
        {
          "defKey": "UPDATED_BY",
          "defName": "更新人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "CCDB961E-09C0-49E9-89BE-21B17588DF53"
        },
        {
          "defKey": "UPDATED_TIME",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "DCD8E749-4B83-42DB-A65A-694C927E2824"
        }
      ],
      "correlations": [],
      "id": "9095C2A1-EF4C-4357-AAB2-26F99C1845CA",
      "indexes": []
    },
    {
      "defKey": "SIMS_INSTRUCT",
      "defName": "授课",
      "comment": "",
      "properties": {
        "partitionBy": ""
      },
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true,
          "freeze": true
        },
        {
          "refKey": "defKey",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "defName",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "primaryKey",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "notNull",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "autoIncrement",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "domain",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "type",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "len",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "scale",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "comment",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "refDict",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "defaultValue",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "isStandard",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "hideInGraph": true,
          "freeze": false
        }
      ],
      "fields": [
        {
          "defKey": "INSTRUCT_ID",
          "defName": "授课号",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "EBB91947-AC9D-426E-B38E-5EE460002796"
        },
        {
          "defKey": "CLASS_ID",
          "defName": "班级ID",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "A23704D2-7128-41A2-988C-D20CB984FA83"
        },
        {
          "defKey": "LESSON_ID",
          "defName": "课程号",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "AE73CBE3-577D-4457-8987-5BEFDECAEED9"
        },
        {
          "defKey": "TEACHER_ID",
          "defName": "教师ID",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "E50C225A-7597-47DB-9057-878F1B491F21"
        },
        {
          "defKey": "TENANT_ID",
          "defName": "租户号",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "D6AFA91F-9A45-44E5-9907-7EBD9253B598"
        },
        {
          "defKey": "REVISION",
          "defName": "乐观锁",
          "comment": "",
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "INT",
          "refDict": "",
          "uiHint": "",
          "id": "5CE25044-60C5-4692-85DE-D6928C7103A1"
        },
        {
          "defKey": "CREATED_BY",
          "defName": "创建人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "D76C1177-91E3-4D45-B61D-F43EDC7D59E8"
        },
        {
          "defKey": "CREATED_TIME",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "D178B020-A55A-4A8A-85E5-611F598031BD"
        },
        {
          "defKey": "UPDATED_BY",
          "defName": "更新人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "3251E42F-8A56-40E7-AE16-F88611EC466A"
        },
        {
          "defKey": "UPDATED_TIME",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "AAB91339-8543-4432-B27C-2AB5FFD5D38F"
        }
      ],
      "correlations": [],
      "id": "1A50AEEB-F956-4275-AE11-5D6F1F471FBE",
      "indexes": []
    },
    {
      "defKey": "SIMS_EXAM",
      "defName": "考试",
      "comment": "",
      "properties": {
        "partitionBy": ""
      },
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true,
          "freeze": true
        },
        {
          "refKey": "defKey",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "defName",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "primaryKey",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "notNull",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "autoIncrement",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "domain",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "type",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "len",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "refKey": "scale",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "comment",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "refDict",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "defaultValue",
          "hideInGraph": true,
          "freeze": false
        },
        {
          "refKey": "isStandard",
          "hideInGraph": false,
          "freeze": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "hideInGraph": true,
          "freeze": false
        }
      ],
      "fields": [
        {
          "defKey": "EXAM_ID",
          "defName": "考试记录ID",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "C5D96022-B0B0-4F9C-B3E1-6E1F69662E9F"
        },
        {
          "defKey": "STUDENT_ID",
          "defName": "学生ID",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "0C5A31BB-2855-4BB9-84D1-7E63B37A71E1"
        },
        {
          "defKey": "LESSON_ID",
          "defName": "课程ID",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "F7FD7836-4E62-47EF-90FE-6B80674A2DDD"
        },
        {
          "defKey": "EXAM_DATE",
          "defName": "考试日期",
          "comment": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "C4C00F8D-9255-44B7-8406-401117E97A05"
        },
        {
          "defKey": "EXAM_NAME",
          "defName": "考试名",
          "comment": "",
          "len": 90,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "53CAC6C4-CB01-4D8D-8E01-2912EA85EDD6"
        },
        {
          "defKey": "EXAM_SCORE",
          "defName": "考试分数",
          "comment": "",
          "len": 24,
          "scale": "8",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "FF4459C5-6B45-4DBF-8FC0-E06239BC05B4",
          "type": "DECIMAL",
          "refDict": "",
          "uiHint": "",
          "id": "FA59122E-20A1-47EB-9BE9-31F90A029AAD"
        },
        {
          "defKey": "TENANT_ID",
          "defName": "租户号",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "2C59F43F-9649-4789-A44F-7DED0435CAB5"
        },
        {
          "defKey": "REVISION",
          "defName": "乐观锁",
          "comment": "",
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "INT",
          "refDict": "",
          "uiHint": "",
          "id": "25143244-C289-446B-8670-BC8C10DA503E"
        },
        {
          "defKey": "CREATED_BY",
          "defName": "创建人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "632BFB89-3714-4971-834D-61004D3F0ED7"
        },
        {
          "defKey": "CREATED_TIME",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "68E8278F-B0B9-4C76-9B80-0B0E0C1993B6"
        },
        {
          "defKey": "UPDATED_BY",
          "defName": "更新人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "898B48FA-AA9F-48FE-92FD-919EB8C619C8"
        },
        {
          "defKey": "UPDATED_TIME",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "D2975854-EE5C-471D-8E14-94D7CC3DB514"
        }
      ],
      "correlations": [],
      "id": "6B1610FB-364F-4514-95D6-9DDA681BFC61",
      "indexes": []
    },
    {
      "defKey": "SIMS_CLASS_FEE",
      "defName": "班费",
      "comment": "",
      "properties": {
        "partitioned by": "(date string)",
        "row format delimited": "",
        "fields terminated by ','": "",
        "collection items terminated by '-'": "",
        "map keys terminated by ':'": "",
        "store as textfile;": ""
      },
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "freeze": true,
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "defKey",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "defName",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "primaryKey",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "notNull",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "autoIncrement",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "domain",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "type",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "len",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "scale",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "comment",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "refDict",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "defaultValue",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "isStandard",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "refKey": "extProps",
          "hideInGraph": true,
          "freeze": false
        }
      ],
      "fields": [
        {
          "defKey": "TENANT_ID",
          "defName": "租户号",
          "comment": "",
          "type": "VARCHAR",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "refDict": "",
          "uiHint": "",
          "id": "7222587D-6678-44EC-991F-4B5ABC2FCE2B"
        },
        {
          "defKey": "REVISION",
          "defName": "乐观锁",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "uiHint": "",
          "id": "977349F1-D737-4E88-B58B-6FD8BEF6F17E"
        },
        {
          "defKey": "CREATED_BY",
          "defName": "创建人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "uiHint": "",
          "id": "983BB0C9-941A-4109-BB63-59E99F467709"
        },
        {
          "defKey": "CREATED_TIME",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "uiHint": "",
          "id": "CF34CD2D-E74C-418F-9FCE-83E419CDE22B"
        },
        {
          "defKey": "UPDATED_BY",
          "defName": "更新人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "VARCHAR",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "uiHint": "",
          "id": "8F5AF2F8-092F-46B1-86D7-68C965F73395"
        },
        {
          "defKey": "UPDATED_TIME",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "uiHint": "",
          "id": "F3CACD53-C52B-4529-8882-9FC94B55B75E"
        }
      ],
      "correlations": [],
      "indexes": [],
      "id": "9EA974A6-DD40-46E3-AC70-60B992352CF7"
    }
  ],
  "views": [
    {
      "defKey": "SMIS_STUDENT_EXAM",
      "defName": "学生考试",
      "comment": "",
      "properties": {
        "partitionBy": ""
      },
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "refKey": "defKey",
          "hideInGraph": false
        },
        {
          "refKey": "refEntity",
          "hideInGraph": true
        },
        {
          "refKey": "defName",
          "hideInGraph": false
        },
        {
          "refKey": "primaryKey",
          "hideInGraph": false
        },
        {
          "refKey": "notNull",
          "hideInGraph": true
        },
        {
          "refKey": "autoIncrement",
          "hideInGraph": true
        },
        {
          "refKey": "domain",
          "hideInGraph": false
        },
        {
          "refKey": "type",
          "hideInGraph": true
        },
        {
          "refKey": "len",
          "hideInGraph": true
        },
        {
          "refKey": "scale",
          "hideInGraph": true
        },
        {
          "refKey": "remark",
          "hideInGraph": true
        },
        {
          "refKey": "refDict",
          "hideInGraph": true
        },
        {
          "refKey": "defaultValue",
          "hideInGraph": true
        },
        {
          "refKey": "isStandard",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        }
      ],
      "fields": [
        {
          "defKey": "STUDENT_ID",
          "defName": "学生ID",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "refEntity": "0FC9DB49-4FDB-437E-83E9-7EE803F1CC84",
          "refEntityField": "5FAE5CA5-B7A6-40C3-878D-1BB3D4A45B5C",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "2AE46886-6281-428E-BE5F-8583268CB3EA"
        },
        {
          "defKey": "STUDENT_NAME",
          "defName": "学生姓名",
          "comment": "",
          "len": 90,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "refEntity": "0FC9DB49-4FDB-437E-83E9-7EE803F1CC84",
          "refEntityField": "51D4FD5A-9EFB-4318-A5D6-6317D630D043",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "AD7F1687-E91E-4EC6-973B-99A10AD6520D"
        },
        {
          "defKey": "MOBILE_PHONE",
          "defName": "手机号",
          "comment": "",
          "len": "60",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "refEntity": "0FC9DB49-4FDB-437E-83E9-7EE803F1CC84",
          "refEntityField": "8D412D1B-5BE4-4031-8293-EE7EA4E65BCE",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "99CEDCC6-D947-40DA-909C-23FFBE56900F"
        },
        {
          "defKey": "GENDER",
          "defName": "性别",
          "comment": "",
          "len": "32",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
          "refDict": "BF9E20E0-80D3-486D-BD58-5FADCF3E4A1D",
          "refEntity": "0FC9DB49-4FDB-437E-83E9-7EE803F1CC84",
          "refEntityField": "C1960E6F-08D3-4773-BF97-57AB8D86FD5C",
          "type": "VARCHAR",
          "uiHint": "",
          "id": "A9D232D6-8491-4648-9045-5D282E8A1A91"
        },
        {
          "defKey": "LESSON_NAME",
          "defName": "课程名",
          "comment": "",
          "len": 90,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "refEntity": "9095C2A1-EF4C-4357-AAB2-26F99C1845CA",
          "refEntityField": "4ECC9FC7-C811-492C-96E3-47C16AFB500A",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "96555C8C-DA61-48E2-807C-47667C7D0469"
        },
        {
          "defKey": "LESSON_ID",
          "defName": "课程ID",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "refEntity": "9095C2A1-EF4C-4357-AAB2-26F99C1845CA",
          "refEntityField": "3D337B5E-182D-45C7-9752-E2DD4D7CF2BD",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "7E45A4DA-D3FA-47CB-8D59-F0D1AF72D7C9"
        },
        {
          "defKey": "EXAM_DATE",
          "defName": "考试日期",
          "comment": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "refEntity": "6B1610FB-364F-4514-95D6-9DDA681BFC61",
          "refEntityField": "C4C00F8D-9255-44B7-8406-401117E97A05",
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "3E27A0D3-AB5C-47CD-B5FB-2BAA1B2D0312"
        },
        {
          "defKey": "EXAM_SCORE",
          "defName": "考试分数",
          "comment": "",
          "len": 24,
          "scale": "8",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "FF4459C5-6B45-4DBF-8FC0-E06239BC05B4",
          "refEntity": "6B1610FB-364F-4514-95D6-9DDA681BFC61",
          "refEntityField": "FA59122E-20A1-47EB-9BE9-31F90A029AAD",
          "type": "DECIMAL",
          "refDict": "",
          "uiHint": "",
          "id": "2AD0455A-A799-4114-B146-E9D0DF195338"
        },
        {
          "defKey": "TENANT_ID",
          "defName": "租户号",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "refEntity": "6B1610FB-364F-4514-95D6-9DDA681BFC61",
          "refEntityField": "2C59F43F-9649-4789-A44F-7DED0435CAB5",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "EF6683DA-F7F1-495D-87CA-D29F5C150237"
        },
        {
          "defKey": "REVISION",
          "defName": "乐观锁",
          "comment": "",
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refEntity": "6B1610FB-364F-4514-95D6-9DDA681BFC61",
          "refEntityField": "25143244-C289-446B-8670-BC8C10DA503E",
          "type": "INT",
          "refDict": "",
          "uiHint": "",
          "id": "EE36FB43-C366-46F2-B5B8-711DF756FF3F"
        },
        {
          "defKey": "CREATED_BY",
          "defName": "创建人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refEntity": "6B1610FB-364F-4514-95D6-9DDA681BFC61",
          "refEntityField": "632BFB89-3714-4971-834D-61004D3F0ED7",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "6B2F5029-590E-47AC-8861-DD195F09580C"
        },
        {
          "defKey": "CREATED_TIME",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refEntity": "6B1610FB-364F-4514-95D6-9DDA681BFC61",
          "refEntityField": "68E8278F-B0B9-4C76-9B80-0B0E0C1993B6",
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "F65EDC3D-6B2E-465F-943A-85336CB75F9F"
        },
        {
          "defKey": "UPDATED_BY",
          "defName": "更新人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refEntity": "6B1610FB-364F-4514-95D6-9DDA681BFC61",
          "refEntityField": "898B48FA-AA9F-48FE-92FD-919EB8C619C8",
          "type": "VARCHAR",
          "refDict": "",
          "uiHint": "",
          "id": "3276F868-CDFB-4B64-82E2-0D71C6C5AE0D"
        },
        {
          "defKey": "UPDATED_TIME",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refEntity": "6B1610FB-364F-4514-95D6-9DDA681BFC61",
          "refEntityField": "D2975854-EE5C-471D-8E14-94D7CC3DB514",
          "type": "DATETIME",
          "refDict": "",
          "uiHint": "",
          "id": "B3104ABE-49EA-4FCD-81C2-3C8AFF8156D6"
        }
      ],
      "correlations": [],
      "refEntities": [
        "0FC9DB49-4FDB-437E-83E9-7EE803F1CC84",
        "9095C2A1-EF4C-4357-AAB2-26F99C1845CA",
        "6B1610FB-364F-4514-95D6-9DDA681BFC61"
      ],
      "id": "DD60F248-86A6-450C-BA20-B4990DCCAF44",
      "indexes": []
    },
    {
      "defKey": "V_CLASS_STUDENT",
      "defName": "班级学生",
      "comment": "",
      "properties": {},
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "refKey": "defKey",
          "hideInGraph": false
        },
        {
          "refKey": "refEntity",
          "hideInGraph": true
        },
        {
          "refKey": "defName",
          "hideInGraph": false
        },
        {
          "refKey": "primaryKey",
          "hideInGraph": false
        },
        {
          "refKey": "notNull",
          "hideInGraph": true
        },
        {
          "refKey": "autoIncrement",
          "hideInGraph": true
        },
        {
          "refKey": "domain",
          "hideInGraph": true
        },
        {
          "refKey": "type",
          "hideInGraph": false
        },
        {
          "refKey": "len",
          "hideInGraph": false
        },
        {
          "refKey": "scale",
          "hideInGraph": false
        },
        {
          "refKey": "comment",
          "hideInGraph": true
        },
        {
          "refKey": "refDict",
          "hideInGraph": true
        },
        {
          "refKey": "defaultValue",
          "hideInGraph": true
        },
        {
          "refKey": "isStandard",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        }
      ],
      "fields": [
        {
          "defKey": "CLASS_NAME",
          "defName": "班级名称",
          "comment": "",
          "len": 90,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "type": "VARCHAR",
          "refEntity": "C698249E-307D-4087-9EC4-3BABCFC00660",
          "refEntityField": "782EC244-02B2-4661-BC21-615F7A468BA8",
          "refDict": "",
          "uiHint": "",
          "id": "3498EA92-4BFC-4FCA-9A0B-36821731881B"
        },
        {
          "defKey": "ENG_NAME",
          "defName": "英文名",
          "comment": "",
          "len": 90,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "type": "",
          "refEntity": "0FC9DB49-4FDB-437E-83E9-7EE803F1CC84",
          "refEntityField": "6A9A2D74-E294-497E-8A0F-0DF671A7F4EE",
          "refDict": "",
          "uiHint": "",
          "id": "46AFA304-8F05-4003-933A-F222A14DAE3B"
        },
        {
          "defKey": "STUDENT_NAME",
          "defName": "学生姓名",
          "comment": "",
          "len": 90,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "type": "",
          "refEntity": "0FC9DB49-4FDB-437E-83E9-7EE803F1CC84",
          "refEntityField": "51D4FD5A-9EFB-4318-A5D6-6317D630D043",
          "refDict": "",
          "uiHint": "",
          "id": "FD734B03-A001-42BA-A5E4-1074EF86ABE4"
        },
        {
          "defKey": "STUDENT_ID",
          "defName": "学生ID",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "",
          "refEntity": "0FC9DB49-4FDB-437E-83E9-7EE803F1CC84",
          "refEntityField": "5FAE5CA5-B7A6-40C3-878D-1BB3D4A45B5C",
          "refDict": "",
          "uiHint": "",
          "id": "13684B95-755D-4A0B-B4F2-2C4BED526108"
        },
        {
          "defKey": "CLASS_ID",
          "defName": "所在班级ID",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "",
          "refEntity": "0FC9DB49-4FDB-437E-83E9-7EE803F1CC84",
          "refEntityField": "1BCE9672-14BA-4B2B-B8C6-222CC6CF0F61",
          "refDict": "",
          "uiHint": "",
          "id": "D2418A3E-8B2B-471D-8B49-1A1889C996C7"
        },
        {
          "defKey": "COLLEGE_ID",
          "defName": "所在学院ID",
          "comment": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "",
          "refEntity": "0FC9DB49-4FDB-437E-83E9-7EE803F1CC84",
          "refEntityField": "84ADFE5C-3750-4E38-AC46-7AD11E869B41",
          "refDict": "",
          "uiHint": "",
          "id": "CB009570-D1A4-484F-BA1B-8E3B8DA11190"
        },
        {
          "defKey": "ADVISER",
          "defName": "辅导员",
          "comment": "",
          "len": 90,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "54611CCC-CA4B-42E1-9F32-4944C85B85A6",
          "type": "VARCHAR",
          "refEntity": "C698249E-307D-4087-9EC4-3BABCFC00660",
          "refEntityField": "6BB204C7-1363-4EB4-94B3-555F47C28754",
          "refDict": "",
          "uiHint": "",
          "id": "36FA87FF-9A78-4CCC-9576-943AD907F66A"
        },
        {
          "defKey": "ID_CARD_NO",
          "defName": "身份证号",
          "comment": "",
          "len": "60",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "",
          "refEntity": "0FC9DB49-4FDB-437E-83E9-7EE803F1CC84",
          "refEntityField": "47AEF665-86ED-40A2-88DB-79BF561CCE32",
          "refDict": "",
          "uiHint": "",
          "id": "704904CA-C612-4CC2-9891-15DF38676B0C"
        },
        {
          "defKey": "MOBILE_PHONE",
          "defName": "手机号",
          "comment": "",
          "len": "60",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "",
          "refEntity": "0FC9DB49-4FDB-437E-83E9-7EE803F1CC84",
          "refEntityField": "8D412D1B-5BE4-4031-8293-EE7EA4E65BCE",
          "refDict": "",
          "uiHint": "",
          "id": "FDAF2E38-0782-48F4-8FBD-A840778E13F8"
        },
        {
          "defKey": "GENDER",
          "defName": "性别",
          "comment": "",
          "len": "32",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "'M'",
          "hideInGraph": false,
          "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
          "refDict": "BF9E20E0-80D3-486D-BD58-5FADCF3E4A1D",
          "type": "",
          "refEntity": "0FC9DB49-4FDB-437E-83E9-7EE803F1CC84",
          "refEntityField": "C1960E6F-08D3-4773-BF97-57AB8D86FD5C",
          "uiHint": "",
          "id": "E39A19BE-19C8-42A7-A599-9F879B756060"
        },
        {
          "defKey": "MARITAL",
          "defName": "婚姻状况",
          "comment": "",
          "len": "32",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "'UNMARRIED'",
          "hideInGraph": true,
          "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
          "refDict": "EA1587B7-3954-437A-BFE0-FCB0453BCABA",
          "type": "",
          "refEntity": "0FC9DB49-4FDB-437E-83E9-7EE803F1CC84",
          "refEntityField": "1BE185DC-216C-4264-A594-9FC766DD8F82",
          "uiHint": "",
          "id": "9AFA5CE4-7670-47D3-BCCB-84FB7A44FE90"
        },
        {
          "defKey": "POLITICAL",
          "defName": "政治面貌",
          "comment": "",
          "len": "32",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
          "refDict": "06EED564-BBA9-4747-8D73-AF809A330CB8",
          "type": "",
          "refEntity": "0FC9DB49-4FDB-437E-83E9-7EE803F1CC84",
          "refEntityField": "BD431E79-93A8-4FB7-83D4-046DA0A54F76",
          "uiHint": "",
          "id": "6118A8F8-12FA-4C68-90FF-15CC55754D08"
        },
        {
          "defKey": "BIRTH",
          "defName": "出生日期",
          "comment": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "",
          "refEntity": "0FC9DB49-4FDB-437E-83E9-7EE803F1CC84",
          "refEntityField": "F705D168-2A65-4C82-8135-DDC85032F855",
          "refDict": "",
          "uiHint": "",
          "id": "D2D1BD75-0343-4270-81EE-C9B2E0B6AC96"
        }
      ],
      "correlations": [],
      "indexes": [],
      "refEntities": [
        "C698249E-307D-4087-9EC4-3BABCFC00660",
        "0FC9DB49-4FDB-437E-83E9-7EE803F1CC84"
      ],
      "id": "81C7ED2A-2A19-4649-BB0F-B730BDF0D1EC"
    }
  ],
  "dicts": [
    {
      "defKey": "Gender",
      "defName": "性别",
      "intro": "",
      "items": [
        {
          "defKey": "M",
          "defName": "男",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "1",
          "id": "3622D417-DA1A-408F-BEE1-11D328D534A0"
        },
        {
          "defKey": "F",
          "defName": "女",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "2",
          "id": "380A0790-64A7-481E-831C-32F7BEE1502B"
        },
        {
          "defKey": "U",
          "defName": "未知",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "3",
          "id": "FA239F4D-1276-40D9-B230-F66BD35C3C27"
        }
      ],
      "id": "BF9E20E0-80D3-486D-BD58-5FADCF3E4A1D"
    },
    {
      "defKey": "Political",
      "defName": "政治面貌",
      "intro": "",
      "items": [
        {
          "defKey": "10",
          "defName": "共青团员",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "61F3145A-7599-4CCB-B298-D5EE788107BE"
        },
        {
          "defKey": "20",
          "defName": "中共党员",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "ED16D25A-AB2F-4FA0-BB48-2B9031FA28C4"
        },
        {
          "defKey": "30",
          "defName": "民主党派",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "0FB7974A-AE11-438F-86E0-B163316F9272"
        },
        {
          "defKey": "40",
          "defName": "群众",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "7D247234-7E97-45B1-8C56-4A17A370854A"
        },
        {
          "defKey": "90",
          "defName": "未知",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "DA65D752-AF04-4A11-81D8-14A38692A64A"
        }
      ],
      "id": "06EED564-BBA9-4747-8D73-AF809A330CB8"
    },
    {
      "defKey": "Marital",
      "defName": "婚姻状况",
      "intro": "婚姻状况的码表",
      "items": [
        {
          "defKey": "UNMARRIED",
          "defName": "未婚",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "1",
          "id": "20EE81BC-74EE-47DA-A56F-9663B23F44BD"
        },
        {
          "defKey": "MARRIED",
          "defName": "已婚",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "2",
          "id": "4DCA10A8-417E-4A8D-BDF6-0A278C060ADC"
        },
        {
          "defKey": "WIDOWED",
          "defName": "丧偶",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "3",
          "id": "826062A7-057C-4892-B338-06459F5B808D"
        },
        {
          "defKey": "DIVORCE",
          "defName": "离婚",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "4",
          "id": "B23200B4-5E59-4F5E-A779-D981A040FA32"
        },
        {
          "defKey": "UNSPECIFIED",
          "defName": "未说明",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "5",
          "id": "A7928FE2-349A-4702-9682-2EF7205E077B"
        }
      ],
      "id": "EA1587B7-3954-437A-BFE0-FCB0453BCABA"
    },
    {
      "defKey": "StudentStatus",
      "defName": "学生状态",
      "intro": "",
      "items": [
        {
          "defKey": "Normal",
          "defName": "正常",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "1",
          "id": "E9CA1CC9-8851-4F6B-86BA-B9CF0E44EB73"
        },
        {
          "defKey": "Graduated",
          "defName": "毕业",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "2",
          "id": "DEC51D7C-99DF-430C-817D-0499862D3CCC"
        },
        {
          "defKey": "Studied",
          "defName": "肄业",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "3",
          "id": "8853D6B6-75D3-4479-9006-FC731CD85B20"
        },
        {
          "defKey": "Stop",
          "defName": "休学",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "4",
          "id": "C74BA8CF-1DC6-4C79-BAAC-F11EB9C6AF01"
        }
      ],
      "id": "4642BC5F-02EE-4E17-A60C-CF22F86A0282"
    },
    {
      "defKey": "GBNation",
      "defName": "民族",
      "intro": "",
      "items": [
        {
          "defKey": "01",
          "defName": "汉族",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "9224DF53-F7C0-447D-B8ED-0A39F799EE19"
        },
        {
          "defKey": "02",
          "defName": "蒙古族",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "D57818E3-9206-45BB-AE79-27C64A4AB80F"
        },
        {
          "defKey": "03",
          "defName": "回族",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "0A1A3CA9-6D68-4E15-8BD0-9A2FF428D804"
        },
        {
          "defKey": "04",
          "defName": "藏族",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "7CC6B6BE-47EA-460E-ACFA-C377468DEA11"
        },
        {
          "defKey": "05",
          "defName": "维吾尔族",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "A666D51F-D249-4FAC-B1F3-78C371836CB3"
        },
        {
          "defKey": "06",
          "defName": "苗族",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "A0C9E1BA-D87B-4695-ADFA-287FDA32BB5A"
        },
        {
          "defKey": "07",
          "defName": "彝族",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "149B5B9E-C1D1-4790-8CCF-0ED5F4B25172"
        },
        {
          "defKey": "08",
          "defName": "壮族",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "F9A3E65C-BF4D-4C6B-ADB7-8C9CF0487360"
        },
        {
          "defKey": "09",
          "defName": "布依族",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "14F17DE4-E96A-460B-98A6-F84EC8CF9885"
        },
        {
          "defKey": "10",
          "defName": "朝鲜族",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "8A81AB18-B1BF-4797-A6E5-DEDB2C6566B0"
        },
        {
          "defKey": "11",
          "defName": "满族",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "7D460947-FBD2-4E4D-8366-3B38DCAF09D1"
        }
      ],
      "id": "115EDEFC-0323-410E-81AB-CCAB8879837A"
    },
    {
      "defKey": "GradeLevel",
      "defName": "受教育程度",
      "sort": "",
      "intro": "",
      "items": [],
      "id": "9E7C9788-B805-4C7D-8531-FD1D9DC79B05"
    }
  ],
  "viewGroups": [],
  "dataTypeMapping": {
    "referURL": "",
    "mappings": [
      {
        "defKey": "string",
        "defName": "字串",
        "id": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
        "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "VARCHAR",
        "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "VARCHAR2",
        "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "VARCHAR",
        "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "VARCHAR",
        "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "VARCHAR",
        "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "VARCHAR2",
        "592C7013-143D-4E7B-AF64-0D7BF1E28230": "VARCHAR",
        "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "VARCHAR",
        "11D1FB71-A587-4217-89BA-611B8A1F83E0": "STRING",
        "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "TEXT",
        "797A1496-D649-4261-89B4-544132EC3F36": "String",
        "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "String",
        "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "String",
        "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "string",
        "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "string",
        "B91D99E0-9B7C-416C-8737-B760957DAF09": "string"
      },
      {
        "defKey": "double",
        "defName": "小数",
        "id": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
        "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "DECIMAL",
        "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "DECIMAL",
        "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "DECIMAL",
        "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "NUMERIC",
        "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "DECIMAL",
        "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "DECIMAL",
        "592C7013-143D-4E7B-AF64-0D7BF1E28230": "NUMERIC",
        "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "NUMERIC",
        "11D1FB71-A587-4217-89BA-611B8A1F83E0": "DOUBLE",
        "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "REAL",
        "797A1496-D649-4261-89B4-544132EC3F36": "Double",
        "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "Double",
        "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "Double",
        "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "decimal",
        "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "double",
        "B91D99E0-9B7C-416C-8737-B760957DAF09": "*float64"
      },
      {
        "defKey": "int",
        "defName": "整数",
        "id": "1D764C4A-6F9F-421E-B11A-6F3E23B51811",
        "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "INT",
        "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "INT",
        "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "INT",
        "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "INTEGER",
        "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "INT",
        "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "INTEGER",
        "592C7013-143D-4E7B-AF64-0D7BF1E28230": "INTEGER",
        "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "INT4",
        "11D1FB71-A587-4217-89BA-611B8A1F83E0": "INT",
        "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "INTEGER",
        "797A1496-D649-4261-89B4-544132EC3F36": "Integer",
        "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "Integer",
        "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "Integer",
        "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "float",
        "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "int",
        "B91D99E0-9B7C-416C-8737-B760957DAF09": "*int"
      },
      {
        "defKey": "date",
        "defName": "日期",
        "id": "89D69E81-EA34-42EE-9FA2-93B8BD27E098",
        "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "DATETIME",
        "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "DATE",
        "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "DATETIME",
        "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "TIMESTAMP",
        "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "DATE",
        "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "DATE",
        "592C7013-143D-4E7B-AF64-0D7BF1E28230": "DATE",
        "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "DATE",
        "11D1FB71-A587-4217-89BA-611B8A1F83E0": "DATETIME",
        "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "NUMERIC",
        "797A1496-D649-4261-89B4-544132EC3F36": "Date",
        "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "Date",
        "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "Date",
        "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "DateTime",
        "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "timestamp",
        "B91D99E0-9B7C-416C-8737-B760957DAF09": "*time.Time"
      },
      {
        "defKey": "bytes",
        "defName": "二进制",
        "id": "D516E75B-90F5-4741-B9B3-A186A263F04C",
        "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "BLOB",
        "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "BLOB",
        "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "VARBINARY",
        "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "BYTEA",
        "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "BLOB",
        "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "BLOB",
        "592C7013-143D-4E7B-AF64-0D7BF1E28230": "BYTEA",
        "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "BYTEA",
        "11D1FB71-A587-4217-89BA-611B8A1F83E0": "BINARY",
        "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "NONE",
        "797A1496-D649-4261-89B4-544132EC3F36": "byte[]",
        "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "byte[]",
        "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "byte[]",
        "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "binary",
        "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "binary",
        "B91D99E0-9B7C-416C-8737-B760957DAF09": "[]byte"
      },
      {
        "defKey": "largeText",
        "defName": "大文本",
        "id": "B17BDED3-085F-40E1-9019-3B79CF2BF075",
        "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "TEXT",
        "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "CLOB",
        "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "TEXT",
        "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "TEXT",
        "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "CLOB",
        "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "CLOB",
        "592C7013-143D-4E7B-AF64-0D7BF1E28230": "TEXT",
        "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "TEXT",
        "11D1FB71-A587-4217-89BA-611B8A1F83E0": "STRING",
        "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "TEXT",
        "797A1496-D649-4261-89B4-544132EC3F36": "String",
        "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "String",
        "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "String",
        "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "string",
        "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "string",
        "B91D99E0-9B7C-416C-8737-B760957DAF09": "string"
      }
    ]
  },
  "domains": [
    {
      "defKey": "DefaultString",
      "defName": "默认字串",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 255,
      "scale": "",
      "uiHint": "",
      "id": "9092C4E0-1A54-4859-ABBB-5B62DBC27573"
    },
    {
      "defKey": "IdOrKey",
      "defName": "主键标识",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 32,
      "scale": "",
      "uiHint": "",
      "id": "16120F75-6AA7-4483-868D-F07F511BB081"
    },
    {
      "defKey": "Name",
      "defName": "名称",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 90,
      "scale": "",
      "uiHint": "",
      "id": "54611CCC-CA4B-42E1-9F32-4944C85B85A6"
    },
    {
      "defKey": "Int",
      "defName": "整数",
      "applyFor": "1D764C4A-6F9F-421E-B11A-6F3E23B51811",
      "len": "",
      "scale": "",
      "uiHint": "",
      "id": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E"
    },
    {
      "defKey": "Double",
      "defName": "小数",
      "applyFor": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
      "len": 24,
      "scale": 6,
      "uiHint": "",
      "id": "FF4459C5-6B45-4DBF-8FC0-E06239BC05B4"
    },
    {
      "defKey": "Money",
      "defName": "金额",
      "applyFor": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
      "len": 24,
      "scale": 6,
      "uiHint": "",
      "id": "C3B1681B-99F9-4818-9E80-DE1652A51D85"
    },
    {
      "defKey": "DateTime",
      "defName": "日期时间",
      "applyFor": "89D69E81-EA34-42EE-9FA2-93B8BD27E098",
      "len": "",
      "scale": "",
      "uiHint": "",
      "id": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC"
    },
    {
      "defKey": "YesNo",
      "defName": "是否",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": "1",
      "scale": "",
      "uiHint": "",
      "id": "6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF"
    },
    {
      "defKey": "Dict",
      "defName": "数据字典",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": "32",
      "scale": "",
      "uiHint": "",
      "id": "73FD2BAD-2358-4336-B96D-45DC897BD792"
    },
    {
      "defKey": "DescText",
      "defName": "描述文本",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": "900",
      "scale": "",
      "uiHint": "",
      "id": "3E948CEC-3070-472C-AF92-F3CA11EC9D15"
    }
  ],
  "diagrams": [
    {
      "defKey": "TableRelations",
      "defName": "数据表关系图",
      "canvasData": {
        "cells": [
          {
            "id": "de986735-cd84-4bd5-b50f-6b5a70df984d",
            "shape": "group",
            "position": {
              "x": -40,
              "y": -40
            },
            "label": "学院设置部分",
            "size": {
              "width": 910,
              "height": 760
            },
            "children": [
              "444bdcfa-cc31-4b36-892b-9caef73cc863",
              "4a31fc9b-4f5a-4f2c-880b-409d433ba848",
              "9972b579-d4c5-4520-9202-7a57bf539151",
              "4bbe78ce-9511-471b-bea0-bcdfa333b636",
              "b9e17f34-b032-4b33-b78b-618b7e046614",
              "925b71be-5cf6-48d7-aea2-5c49e68a5d8b",
              "6210b0eb-8566-4b64-885b-f1b00d6078d7",
              "914c8f40-8cff-49ed-86a9-4dcad63ad668",
              "56317816-819f-41ea-a6ef-bdcd0027fb68",
              "f03ab359-7568-4402-bc56-4593bf5e1420",
              "5428380e-8314-4f6f-9048-43eff1b48ee5",
              "979dfa9f-475a-4be8-8ddc-1f2500ff212b"
            ]
          },
          {
            "id": "02b64cef-3ee3-48a5-9867-9dc4e9726bfd",
            "shape": "group",
            "position": {
              "x": 883.9999999999982,
              "y": -40
            },
            "label": "学生行为",
            "size": {
              "width": 860,
              "height": 760
            },
            "children": [
              "9a5658de-7e28-4815-95c2-ccf5ff90e6c1",
              "26b28925-27ed-488d-b20d-2abbcafa5057",
              "942a65c8-c294-4ea4-98ec-1df43daa3ff5",
              "8fad7c2e-d083-4589-b938-071541a6cea1",
              "d6502944-49c1-4584-a595-c414134a8773",
              "b9d16e42-dfdd-479f-8a39-79d6c3acc6a9"
            ]
          },
          {
            "id": "4a31fc9b-4f5a-4f2c-880b-409d433ba848",
            "shape": "table",
            "position": {
              "x": 20.00000000000165,
              "y": 459.999999999998
            },
            "count": 0,
            "originKey": "9095C2A1-EF4C-4357-AAB2-26F99C1845CA",
            "parent": "de986735-cd84-4bd5-b50f-6b5a70df984d"
          },
          {
            "id": "444bdcfa-cc31-4b36-892b-9caef73cc863",
            "shape": "table",
            "position": {
              "x": 475.00000000000165,
              "y": 414.999999999998
            },
            "count": 0,
            "originKey": "536B8B19-C2B3-45D1-ADA8-402C0083FC31",
            "parent": "de986735-cd84-4bd5-b50f-6b5a70df984d"
          },
          {
            "id": "4bbe78ce-9511-471b-bea0-bcdfa333b636",
            "shape": "table",
            "position": {
              "x": 551.0000000000016,
              "y": 242.999999999998
            },
            "count": 0,
            "originKey": "1A50AEEB-F956-4275-AE11-5D6F1F471FBE",
            "parent": "de986735-cd84-4bd5-b50f-6b5a70df984d"
          },
          {
            "id": "9972b579-d4c5-4520-9202-7a57bf539151",
            "shape": "table",
            "position": {
              "x": 30.50000000000165,
              "y": 242.999999999998
            },
            "count": 0,
            "originKey": "C2F51B91-7C24-4CB4-8406-706F4851EB0B",
            "parent": "de986735-cd84-4bd5-b50f-6b5a70df984d"
          },
          {
            "id": "56317816-819f-41ea-a6ef-bdcd0027fb68",
            "shape": "table",
            "position": {
              "x": 34.50000000000165,
              "y": 19.99999999999801
            },
            "count": 0,
            "originKey": "26B8D13E-BE37-4E20-8496-13A586E84581",
            "parent": "de986735-cd84-4bd5-b50f-6b5a70df984d"
          },
          {
            "id": "6210b0eb-8566-4b64-885b-f1b00d6078d7",
            "shape": "table",
            "position": {
              "x": 521.0000000000016,
              "y": 19.99999999999801
            },
            "count": 0,
            "originKey": "C698249E-307D-4087-9EC4-3BABCFC00660",
            "fontColor": "#555555",
            "fillColor": "#dce775",
            "parent": "de986735-cd84-4bd5-b50f-6b5a70df984d"
          },
          {
            "id": "26b28925-27ed-488d-b20d-2abbcafa5057",
            "shape": "table",
            "position": {
              "x": 1351,
              "y": 19.99999999999801
            },
            "count": 0,
            "originKey": "6B1610FB-364F-4514-95D6-9DDA681BFC61",
            "fillColor": "#9acc98",
            "parent": "02b64cef-3ee3-48a5-9867-9dc4e9726bfd"
          },
          {
            "id": "f03ab359-7568-4402-bc56-4593bf5e1420",
            "shape": "erdRelation",
            "source": {
              "cell": "56317816-819f-41ea-a6ef-bdcd0027fb68",
              "port": "9651B83A-2208-4F1E-A870-C3C4E1FAF103%out"
            },
            "target": {
              "cell": "6210b0eb-8566-4b64-885b-f1b00d6078d7",
              "port": "D793F097-1364-49FD-B02C-D4EBBA5A055A%in"
            },
            "relation": "1:n",
            "vertices": [],
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": ""
                  },
                  "rect": {}
                }
              }
            ],
            "fillColor": "#ACDAFC",
            "parent": "de986735-cd84-4bd5-b50f-6b5a70df984d"
          },
          {
            "id": "3febdf30-c87b-42b6-b4f0-4e4af1bf70c8",
            "shape": "erdRelation",
            "source": {
              "cell": "6210b0eb-8566-4b64-885b-f1b00d6078d7",
              "port": "6D6BC6AA-8114-4B91-8A2C-4B5FEACEB347%out"
            },
            "target": {
              "cell": "9a5658de-7e28-4815-95c2-ccf5ff90e6c1",
              "port": "1BCE9672-14BA-4B2B-B8C6-222CC6CF0F61%in"
            },
            "relation": "1:n",
            "vertices": [
              {
                "x": 880,
                "y": 106
              }
            ],
            "fillColor": "#ACDAFC"
          },
          {
            "id": "979dfa9f-475a-4be8-8ddc-1f2500ff212b",
            "shape": "erdRelation",
            "source": {
              "cell": "9972b579-d4c5-4520-9202-7a57bf539151",
              "port": "8707AEB9-3EC5-4EEA-9E14-99BAF28B46B4%out"
            },
            "target": {
              "cell": "6210b0eb-8566-4b64-885b-f1b00d6078d7",
              "port": "63130D1B-63C8-491C-B36D-5603A30BFB37%in"
            },
            "relation": "1:n",
            "vertices": [
              {
                "x": 450.00000000000165,
                "y": 82.99999999999801
              }
            ],
            "fillColor": "#ACDAFC",
            "parent": "de986735-cd84-4bd5-b50f-6b5a70df984d"
          },
          {
            "id": "b9e17f34-b032-4b33-b78b-618b7e046614",
            "shape": "erdRelation",
            "source": {
              "cell": "4a31fc9b-4f5a-4f2c-880b-409d433ba848",
              "port": "3D337B5E-182D-45C7-9752-E2DD4D7CF2BD%out"
            },
            "target": {
              "cell": "4bbe78ce-9511-471b-bea0-bcdfa333b636",
              "port": "AE73CBE3-577D-4457-8987-5BEFDECAEED9%in"
            },
            "relation": "1:n",
            "vertices": [
              {
                "x": 450.00000000000165,
                "y": 328.999999999998
              }
            ],
            "fillColor": "#ACDAFC",
            "parent": "de986735-cd84-4bd5-b50f-6b5a70df984d"
          },
          {
            "id": "925b71be-5cf6-48d7-aea2-5c49e68a5d8b",
            "shape": "erdRelation",
            "source": {
              "cell": "444bdcfa-cc31-4b36-892b-9caef73cc863",
              "port": "C5916046-F140-4B0C-BF84-EBD7DDB38EAA%out"
            },
            "target": {
              "cell": "4bbe78ce-9511-471b-bea0-bcdfa333b636",
              "port": "AE73CBE3-577D-4457-8987-5BEFDECAEED9%out"
            },
            "relation": "1:n",
            "fillColor": "#ACDAFC",
            "parent": "de986735-cd84-4bd5-b50f-6b5a70df984d"
          },
          {
            "id": "b9d16e42-dfdd-479f-8a39-79d6c3acc6a9",
            "shape": "erdRelation",
            "source": {
              "cell": "942a65c8-c294-4ea4-98ec-1df43daa3ff5",
              "port": "3D337B5E-182D-45C7-9752-E2DD4D7CF2BD%out"
            },
            "target": {
              "cell": "26b28925-27ed-488d-b20d-2abbcafa5057",
              "port": "F7FD7836-4E62-47EF-90FE-6B80674A2DDD%out"
            },
            "relation": "1:n",
            "vertices": [
              {
                "x": 1710,
                "y": 106
              }
            ],
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": "考试课程"
                  },
                  "rect": {}
                }
              }
            ],
            "fillColor": "#ACDAFC",
            "parent": "02b64cef-3ee3-48a5-9867-9dc4e9726bfd"
          },
          {
            "id": "5428380e-8314-4f6f-9048-43eff1b48ee5",
            "shape": "erdRelation",
            "source": {
              "cell": "56317816-819f-41ea-a6ef-bdcd0027fb68",
              "port": "9651B83A-2208-4F1E-A870-C3C4E1FAF103%in"
            },
            "target": {
              "cell": "444bdcfa-cc31-4b36-892b-9caef73cc863",
              "port": "EFD22F94-E1D0-4CAD-947D-E856A997D7B5%in"
            },
            "relation": "1:n",
            "vertices": [
              {
                "x": 1.6484591469634324e-12,
                "y": 629.999999999998
              },
              {
                "x": 460.00000000000165,
                "y": 629.999999999998
              }
            ],
            "fillColor": "#ACDAFC",
            "parent": "de986735-cd84-4bd5-b50f-6b5a70df984d"
          },
          {
            "id": "d6502944-49c1-4584-a595-c414134a8773",
            "shape": "erdRelation",
            "source": {
              "cell": "9a5658de-7e28-4815-95c2-ccf5ff90e6c1",
              "port": "5FAE5CA5-B7A6-40C3-878D-1BB3D4A45B5C%out"
            },
            "target": {
              "cell": "26b28925-27ed-488d-b20d-2abbcafa5057",
              "port": "0C5A31BB-2855-4BB9-84D1-7E63B37A71E1%in"
            },
            "relation": "1:n",
            "vertices": [
              {
                "x": 1320,
                "y": 106
              },
              {
                "x": 1320,
                "y": 83
              }
            ],
            "fillColor": "#ACDAFC",
            "parent": "02b64cef-3ee3-48a5-9867-9dc4e9726bfd"
          },
          {
            "id": "914c8f40-8cff-49ed-86a9-4dcad63ad668",
            "shape": "erdRelation",
            "source": {
              "cell": "6210b0eb-8566-4b64-885b-f1b00d6078d7",
              "port": "6D6BC6AA-8114-4B91-8A2C-4B5FEACEB347%in"
            },
            "target": {
              "cell": "4bbe78ce-9511-471b-bea0-bcdfa333b636",
              "port": "A23704D2-7128-41A2-988C-D20CB984FA83%in"
            },
            "relation": "1:n",
            "fillColor": "#ACDAFC",
            "parent": "de986735-cd84-4bd5-b50f-6b5a70df984d"
          },
          {
            "id": "8fad7c2e-d083-4589-b938-071541a6cea1",
            "shape": "edit-node",
            "position": {
              "x": 1122,
              "y": 459.999999999998
            },
            "label": "课程信息表为镜像，所以后面的“:1\"标识，是指第1个镜像副本，仅关系图需要",
            "fontColor": "#f62b07",
            "fillColor": "#fcfcac",
            "parent": "02b64cef-3ee3-48a5-9867-9dc4e9726bfd",
            "size": {
              "width": 460,
              "height": 90
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "in",
                  "id": "in2"
                },
                {
                  "group": "in",
                  "id": "in3"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "out",
                  "id": "out2"
                },
                {
                  "group": "out",
                  "id": "out3"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "top",
                  "id": "top2"
                },
                {
                  "group": "top",
                  "id": "top3"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                },
                {
                  "group": "bottom",
                  "id": "bottom2"
                },
                {
                  "group": "bottom",
                  "id": "bottom3"
                }
              ]
            }
          },
          {
            "id": "9a5658de-7e28-4815-95c2-ccf5ff90e6c1",
            "shape": "table",
            "position": {
              "x": 930,
              "y": 19.99999999999801
            },
            "count": 0,
            "originKey": "0FC9DB49-4FDB-437E-83E9-7EE803F1CC84",
            "fontColor": "#0d0d0d",
            "fillColor": "#c00000",
            "parent": "02b64cef-3ee3-48a5-9867-9dc4e9726bfd"
          },
          {
            "id": "942a65c8-c294-4ea4-98ec-1df43daa3ff5",
            "shape": "table",
            "position": {
              "x": 1341,
              "y": 231.499999999998
            },
            "count": 1,
            "originKey": "9095C2A1-EF4C-4357-AAB2-26F99C1845CA",
            "parent": "02b64cef-3ee3-48a5-9867-9dc4e9726bfd"
          }
        ]
      },
      "id": "9427DD89-11C0-431F-9BB0-8353A2725174"
    },
    {
      "defKey": "KeyEntities",
      "defName": "关键业务对象",
      "canvasData": {
        "cells": [
          {
            "id": "ac8ecb2d-7944-414d-b6ea-e69d064255c1",
            "shape": "erdRelation",
            "source": {
              "cell": "892b4b11-4750-4238-9c86-bb20192eb1bb",
              "port": "out2"
            },
            "target": {
              "cell": "563779f2-b18d-4158-b78b-36fa30b4b371",
              "port": "in2"
            },
            "relation": "1:n",
            "vertices": [],
            "labels": [
              {
                "attrs": {
                  "text": {
                    "text": ""
                  },
                  "rect": {}
                }
              }
            ],
            "fillColor": "#ACDAFC"
          },
          {
            "id": "ef8fc07c-b10b-4167-9760-1c46e2bb06d9",
            "shape": "erdRelation",
            "source": {
              "cell": "563779f2-b18d-4158-b78b-36fa30b4b371",
              "port": "out2"
            },
            "target": {
              "cell": "1fcc5b1b-5a4e-4fc5-af7b-13e1eaff7133",
              "port": "in"
            },
            "relation": "1:n",
            "vertices": [
              {
                "x": 480,
                "y": 140
              }
            ],
            "fillColor": "#ACDAFC"
          },
          {
            "id": "e726ad52-1294-45c1-9965-e3bccb6134ac",
            "shape": "erdRelation",
            "source": {
              "cell": "02b5b284-86e8-413b-a2ce-d2c052e13c94",
              "port": "bottom2"
            },
            "target": {
              "cell": "e63e919b-f925-4dca-8d73-9279ab06d72c",
              "port": "bottom2"
            },
            "relation": "1:n",
            "vertices": [
              {
                "x": 749,
                "y": 520
              }
            ],
            "fillColor": "#ACDAFC"
          },
          {
            "id": "2e2dc3ab-172a-4dfb-9711-c7be64fd2fcd",
            "shape": "erdRelation",
            "source": {
              "cell": "892b4b11-4750-4238-9c86-bb20192eb1bb",
              "port": "in2"
            },
            "target": {
              "cell": "34f587ad-faf7-4fa9-948d-e623648d77b9",
              "port": "bottom2"
            },
            "relation": "1:n",
            "vertices": [
              {
                "x": 70,
                "y": 540
              }
            ],
            "fillColor": "#ACDAFC"
          },
          {
            "id": "3f42f177-a03f-4024-8470-5fe98923ac20",
            "shape": "erdRelation",
            "source": {
              "cell": "1fcc5b1b-5a4e-4fc5-af7b-13e1eaff7133",
              "port": "out"
            },
            "target": {
              "cell": "e63e919b-f925-4dca-8d73-9279ab06d72c",
              "port": "top2"
            },
            "relation": "1:n",
            "fillColor": "#ACDAFC"
          },
          {
            "id": "d0c269e7-1260-44df-b7df-631dd5d7754f",
            "shape": "erdRelation",
            "source": {
              "cell": "563779f2-b18d-4158-b78b-36fa30b4b371",
              "port": "bottom2"
            },
            "target": {
              "cell": "dc34a8bc-62a9-4a97-bc60-7195d1aa66e8",
              "port": "top2"
            },
            "relation": "1:n",
            "fillColor": "#ACDAFC"
          },
          {
            "id": "6e18b347-52cb-4e8f-a426-f2274a1e0581",
            "shape": "erdRelation",
            "source": {
              "cell": "1380680e-72b6-42cc-b634-b92b155c38c5",
              "port": "out"
            },
            "target": {
              "cell": "563779f2-b18d-4158-b78b-36fa30b4b371",
              "port": "in3"
            },
            "relation": "1:n",
            "fillColor": "#ACDAFC"
          },
          {
            "id": "a7446b72-6145-4f91-aa0a-59dbd0cdd07e",
            "shape": "erdRelation",
            "source": {
              "cell": "34f587ad-faf7-4fa9-948d-e623648d77b9",
              "port": "out"
            },
            "target": {
              "cell": "dc34a8bc-62a9-4a97-bc60-7195d1aa66e8",
              "port": "in2"
            },
            "relation": "1:n",
            "fillColor": "#ACDAFC"
          },
          {
            "id": "734f21dd-e215-4a14-90ab-f18b0df70d61",
            "shape": "erdRelation",
            "source": {
              "cell": "02b5b284-86e8-413b-a2ce-d2c052e13c94",
              "port": "out2"
            },
            "target": {
              "cell": "dc34a8bc-62a9-4a97-bc60-7195d1aa66e8",
              "port": "out2"
            },
            "relation": "1:n",
            "vertices": [
              {
                "x": 470,
                "y": 360
              }
            ],
            "fillColor": "#ACDAFC"
          },
          {
            "id": "34f587ad-faf7-4fa9-948d-e623648d77b9",
            "shape": "edit-node-circle",
            "position": {
              "x": 140,
              "y": 394
            },
            "label": "### 教师\n---\n<u>教师号</u>\n教师姓名\n教师介绍\n教师性别",
            "fillColor": "#acdafc",
            "size": {
              "width": 120,
              "height": 120
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "in",
                  "id": "in2"
                },
                {
                  "group": "in",
                  "id": "in3"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "out",
                  "id": "out2"
                },
                {
                  "group": "out",
                  "id": "out3"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "top",
                  "id": "top2"
                },
                {
                  "group": "top",
                  "id": "top3"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                },
                {
                  "group": "bottom",
                  "id": "bottom2"
                },
                {
                  "group": "bottom",
                  "id": "bottom3"
                }
              ]
            }
          },
          {
            "id": "dc34a8bc-62a9-4a97-bc60-7195d1aa66e8",
            "shape": "edit-node-circle",
            "position": {
              "x": 326,
              "y": 248
            },
            "label": "### 授课\n---\n授课老师\n授课专业\n授课班级",
            "fillColor": "#acdafc",
            "size": {
              "width": 110,
              "height": 100
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "in",
                  "id": "in2"
                },
                {
                  "group": "in",
                  "id": "in3"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "out",
                  "id": "out2"
                },
                {
                  "group": "out",
                  "id": "out3"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "top",
                  "id": "top2"
                },
                {
                  "group": "top",
                  "id": "top3"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                },
                {
                  "group": "bottom",
                  "id": "bottom2"
                },
                {
                  "group": "bottom",
                  "id": "bottom3"
                }
              ]
            }
          },
          {
            "id": "02b5b284-86e8-413b-a2ce-d2c052e13c94",
            "shape": "edit-node-circle",
            "position": {
              "x": 316,
              "y": 399
            },
            "label": "### 课程\n---\n<u>课程号</u>\n课程名\n课程介绍\n学分",
            "fillColor": "#acdafc",
            "size": {
              "width": 130,
              "height": 110
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "in",
                  "id": "in2"
                },
                {
                  "group": "in",
                  "id": "in3"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "out",
                  "id": "out2"
                },
                {
                  "group": "out",
                  "id": "out3"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "top",
                  "id": "top2"
                },
                {
                  "group": "top",
                  "id": "top3"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                },
                {
                  "group": "bottom",
                  "id": "bottom2"
                },
                {
                  "group": "bottom",
                  "id": "bottom3"
                }
              ]
            }
          },
          {
            "id": "892b4b11-4750-4238-9c86-bb20192eb1bb",
            "shape": "edit-node-circle",
            "position": {
              "x": 145,
              "y": 88
            },
            "label": "### 学院\n---\n<u>学院号</u>\n学院名\n院长",
            "fillColor": "#acdafc",
            "size": {
              "width": 110,
              "height": 100
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "in",
                  "id": "in2"
                },
                {
                  "group": "in",
                  "id": "in3"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "out",
                  "id": "out2"
                },
                {
                  "group": "out",
                  "id": "out3"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "top",
                  "id": "top2"
                },
                {
                  "group": "top",
                  "id": "top3"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                },
                {
                  "group": "bottom",
                  "id": "bottom2"
                },
                {
                  "group": "bottom",
                  "id": "bottom3"
                }
              ]
            }
          },
          {
            "id": "563779f2-b18d-4158-b78b-36fa30b4b371",
            "shape": "edit-node-circle",
            "position": {
              "x": 326,
              "y": 85
            },
            "label": "### 班级\n---\n班级号\n班级名\n班主任",
            "fillColor": "#37d67a",
            "size": {
              "width": 110,
              "height": 110
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "in",
                  "id": "in2"
                },
                {
                  "group": "in",
                  "id": "in3"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "out",
                  "id": "out2"
                },
                {
                  "group": "out",
                  "id": "out3"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "top",
                  "id": "top2"
                },
                {
                  "group": "top",
                  "id": "top3"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                },
                {
                  "group": "bottom",
                  "id": "bottom2"
                },
                {
                  "group": "bottom",
                  "id": "bottom3"
                }
              ]
            }
          },
          {
            "id": "e63e919b-f925-4dca-8d73-9279ab06d72c",
            "shape": "edit-node-circle",
            "position": {
              "x": 709,
              "y": 188
            },
            "label": "**考试**",
            "fillColor": "#ff8a65",
            "size": {
              "width": 80,
              "height": 60
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "in",
                  "id": "in2"
                },
                {
                  "group": "in",
                  "id": "in3"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "out",
                  "id": "out2"
                },
                {
                  "group": "out",
                  "id": "out3"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "top",
                  "id": "top2"
                },
                {
                  "group": "top",
                  "id": "top3"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                },
                {
                  "group": "bottom",
                  "id": "bottom2"
                },
                {
                  "group": "bottom",
                  "id": "bottom3"
                }
              ]
            }
          },
          {
            "id": "1380680e-72b6-42cc-b634-b92b155c38c5",
            "shape": "edit-node-circle",
            "position": {
              "x": 140,
              "y": 248
            },
            "label": "### 专业\n---\n<u>专业号</u>\n专业名\n专业说明",
            "fillColor": "#acdafc",
            "size": {
              "width": 120,
              "height": 100
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "in",
                  "id": "in2"
                },
                {
                  "group": "in",
                  "id": "in3"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "out",
                  "id": "out2"
                },
                {
                  "group": "out",
                  "id": "out3"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "top",
                  "id": "top2"
                },
                {
                  "group": "top",
                  "id": "top3"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                },
                {
                  "group": "bottom",
                  "id": "bottom2"
                },
                {
                  "group": "bottom",
                  "id": "bottom3"
                }
              ]
            }
          },
          {
            "id": "1fcc5b1b-5a4e-4fc5-af7b-13e1eaff7133",
            "shape": "edit-node",
            "position": {
              "x": 521,
              "y": 85
            },
            "label": "### 学生\n---\n学生学号\n学生姓名\n学生性别\n学生年龄\n入学日期\n---\n父母姓名\n父母手机",
            "fillColor": "#758ae7",
            "size": {
              "width": 140,
              "height": 190
            },
            "ports": {
              "groups": {
                "in": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "left"
                  }
                },
                "out": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "right"
                  }
                },
                "top": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "top"
                  }
                },
                "bottom": {
                  "attrs": {
                    "fo": {
                      "width": 8,
                      "height": 8,
                      "x": -4,
                      "y": -4,
                      "magnet": "true",
                      "style": {
                        "visibility": "hidden"
                      }
                    }
                  },
                  "zIndex": 3,
                  "position": {
                    "name": "bottom"
                  }
                }
              },
              "items": [
                {
                  "group": "in",
                  "id": "in"
                },
                {
                  "group": "in",
                  "id": "in2"
                },
                {
                  "group": "in",
                  "id": "in3"
                },
                {
                  "group": "out",
                  "id": "out"
                },
                {
                  "group": "out",
                  "id": "out2"
                },
                {
                  "group": "out",
                  "id": "out3"
                },
                {
                  "group": "top",
                  "id": "top"
                },
                {
                  "group": "top",
                  "id": "top2"
                },
                {
                  "group": "top",
                  "id": "top3"
                },
                {
                  "group": "bottom",
                  "id": "bottom"
                },
                {
                  "group": "bottom",
                  "id": "bottom2"
                },
                {
                  "group": "bottom",
                  "id": "bottom3"
                }
              ]
            }
          }
        ]
      },
      "id": "BA37ED6E-4E0A-4D48-A976-60A129309FA5"
    }
  ],
  "standardFields": [
    {
      "defKey": "personInfo",
      "defName": "个人基本信息要素",
      "fields": [
        {
          "defKey": "ID_CARD_NO",
          "defName": "身份证号",
          "comment": "",
          "type": "VARCHAR",
          "len": "60",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "refDict": "",
          "uiHint": "",
          "id": "A64A91C8-A41F-4113-92FB-7563D7EF054D"
        },
        {
          "defKey": "MOBILE_PHONE",
          "defName": "手机号",
          "comment": "",
          "type": "VARCHAR",
          "len": "60",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "refDict": "",
          "uiHint": "",
          "id": "479DA2AB-1974-411A-A81E-92FB939E75EB"
        },
        {
          "defKey": "GENDER",
          "defName": "性别",
          "comment": "",
          "type": "VARCHAR",
          "len": "32",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
          "refDict": "BF9E20E0-80D3-486D-BD58-5FADCF3E4A1D",
          "uiHint": "",
          "id": "48473E29-6594-4912-AADE-C8AB44FCA3E9"
        },
        {
          "defKey": "BIRTH",
          "defName": "出生日期",
          "comment": "",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "refDict": "",
          "uiHint": "",
          "id": "2BD3D2EE-2411-49A6-983D-84B81057312F"
        },
        {
          "defKey": "AVATAR",
          "defName": "头像",
          "comment": "",
          "type": "VARCHAR",
          "len": "60",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "refDict": "",
          "uiHint": "",
          "id": "FDD67CEE-4B52-4BD1-A1A3-9C5EBC6037E6"
        },
        {
          "defKey": "HEIGHT",
          "defName": "身高",
          "comment": "",
          "type": "INT",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "refDict": "",
          "uiHint": "",
          "id": "CAAA0E79-41A1-4758-B481-D171168C4D68"
        },
        {
          "defKey": "WEIGHT",
          "defName": "体重",
          "comment": "",
          "type": "INT",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "refDict": "",
          "uiHint": "",
          "id": "575482CE-64A6-4CB9-99DC-8E126D190AAA"
        },
        {
          "defKey": "NATION",
          "defName": "名族",
          "comment": "",
          "type": "VARCHAR",
          "len": "32",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
          "refDict": "115EDEFC-0323-410E-81AB-CCAB8879837A",
          "uiHint": "",
          "id": "15B0D75D-0B97-4985-A816-D0EAFA90446B"
        },
        {
          "defKey": "POLITICAL",
          "defName": "政治面貌",
          "comment": "",
          "type": "VARCHAR",
          "len": "32",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
          "refDict": "06EED564-BBA9-4747-8D73-AF809A330CB8",
          "uiHint": "",
          "id": "F458E86D-84D6-45A1-9DD3-51E6C8170D7F"
        },
        {
          "defKey": "MARITAL",
          "defName": "婚姻状况",
          "comment": "",
          "type": "VARCHAR",
          "len": "32",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
          "refDict": "EA1587B7-3954-437A-BFE0-FCB0453BCABA",
          "uiHint": "",
          "id": "7275E578-6893-4922-AC69-95B261BFBD61"
        },
        {
          "defKey": "DOMICILE_PLACE_PROVINCE",
          "defName": "籍贯（省）",
          "comment": "",
          "type": "VARCHAR",
          "len": "60",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "refDict": "",
          "uiHint": "",
          "id": "F04BF130-3EC1-4E02-9DED-3214CA88E352"
        },
        {
          "defKey": "DOMICILE_PLACE_CITY",
          "defName": "籍贯（市）",
          "comment": "",
          "type": "VARCHAR",
          "len": "32",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
          "refDict": "",
          "uiHint": "",
          "id": "B97F5BC2-33DE-4857-9DB8-ECFD02C9040C"
        },
        {
          "defKey": "DOMICILE_PLACE_ADDRESS",
          "defName": "户籍地址",
          "comment": "",
          "type": "VARCHAR",
          "len": "60",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "refDict": "",
          "uiHint": "",
          "id": "812ADF1D-8C03-40CA-B030-E539838FB889"
        }
      ],
      "id": "F30202B9-4B5D-4CE7-87CE-B3890C84D3F2"
    }
  ],
  "dbConn": []
}
